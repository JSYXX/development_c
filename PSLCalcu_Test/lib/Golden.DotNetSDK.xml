<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Golden.DotNetSDK</name>
    </assembly>
    <members>
        <member name="T:Golden.DotNetSDK.Common.RTDBConnection">
            <summary>
            数据库连接对象
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnection.#ctor(System.String)">
            <summary>
            创建与数据库的连接
            </summary>
            <param name="connStr">连接字符串</param>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnection.Open">
            <summary>
            打开数据库连接
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnection.OpenPriv">
            <summary>
            直接打开连接
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnection.Close">
            <summary>
            关闭数据库连接(不会跑异常)
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnection.ClosePriv">
            <summary>
            彻底释放连接
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnection.Dispose">
            <summary>
            释放数据库连接
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnection.GetConnectionFromPool">
            <summary>
            从连接池中拿连接
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.Handler">
            <summary>
            连接句柄
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.State">
            <summary>
            连接状态
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.PrivGroup">
            <summary>
            用户权限
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.HostName">
            <summary>
            ip地址
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.IntDataChangeDelegate">
            <summary>
            整型 数据订阅回调函数
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.IntDataChangeDelegateEx">
            <summary>
            整型 数据订阅回调函数 2017.03.28
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.FloatDataChangeDelegate">
            <summary>
            浮点型 数据订阅回调函数
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.FloatDataChangeDelegateEx">
            <summary>
            浮点型 数据订阅回调函数 2017.03.28
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.TagsChangeDelegate">
            <summary>
            整形 通知订阅回调函数
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnection.TagsChangeDelegateEx">
            <summary>
            整形 通知订阅回调函数 2017.03.28
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Common.RTDBConnectionPool">
            <summary>
            连接池
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPool.TryDequeue(Golden.DotNetSDK.Common.RTDBConnection@)">
            <summary>
            尝试获取连接
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPool.Enqueue(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            将连接入队
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPool.ClearQueue">
            <summary>
            释放连接资源
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPool.IsConnectionAvailable(Golden.DotNetSDK.Common.RTDBConnection@)">
            <summary>
            判断连接是否可用
            </summary>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPool.TryNewConnection(Golden.DotNetSDK.Common.RTDBConnection@)">
            <summary>
            申请新的连接
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPool.DisposeConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            释放单个连接
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPool.InintConnectionQueue">
            <summary>
            初始化连接池队列
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPool.GetMaxConnections">
            <summary>
            获取最大连接数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPool.GetHashCode(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            根据连接字符串获取hashcode
            </summary>
            <param name="conn">连接对象</param>
            <returns></returns>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnectionPool.MaxPoolSize">
            <summary>
            连接池的最大连接
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnectionPool.MinPoolSize">
            <summary>
            连接池的最小连接
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBConnectionPool.Count">
            <summary>
            连接池连接的大小
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Common.RTDBConnectionPoolManager">
            <summary>
            连接池管理类
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPoolManager.GenerateKey(System.String,System.Int32)">
            <summary>
            封装连接池的key
            </summary>
            <param name="ip">ip地址</param>
            <param name="port">端口号</param>
            <returns>key</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPoolManager.GetConnectionPool(System.Int32,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            获取连接池并初始化连接池
            </summary>
            <param name="port">端口号</param>
            <param name="ip">ip</param>
            <param name="minPoolSize">最小连接</param>
            <param name="maxPoolSize">最大连接</param>
            <param name="connectionStr">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPoolManager.RemoveConnectionPool(System.Int32,System.String)">
            <summary>
            移除连接池
            </summary>
            <param name="port">端口号</param>
            <param name="ip">ip地址</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBConnectionPoolManager.CleanupConnectionPool(System.Int32,System.String)">
            <summary>
            清空所有连接池
            </summary>
            <param name="port">端口号</param>
            <param name="ip">ip地址</param>
        </member>
        <member name="T:Golden.DotNetSDK.Common.RTDBError">
            <summary>
            错误处理
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBError.FormatMessage(System.UInt32)">
            <summary>
            获取错误码对应的错误信息
            </summary>
            <param name="ecode">错误码</param>
            <returns>错误码：错误信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBError.#cctor">
            <summary>
            构造异常信息
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBError.GetError(System.UInt32)">
            <summary>
            根据错误码获得错误信息描述
            </summary>
            <param name="errorId"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBError.GetError(System.UInt32[])">
            <summary>
            
            </summary>
            <param name="errorIds"></param>
            <returns></returns>
        </member>
        <member name="T:Golden.DotNetSDK.Common.RTDBException">
            <summary>
            异常处理
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBException.#ctor(System.String)">
            <summary>
            传入参数的构造函数
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Common.RTDBException.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBException.StackTrace">
            <summary>
            
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBException.Source">
            <summary>
            
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Common.RTDBException.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.MaxCalcPoint.Equation">
            <summary>
            实时方程式
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.MaxCalcPoint.Trigger">
            <summary>
            计算触发机制。（Trigger=1表示事件触发，Trigger=2表示周期触发，Trigger=0表示无触发）
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.MaxCalcPoint.Timecopy">
            <summary>
            算结果时间戳参考
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.MaxCalcPoint.Period">
            <summary>
            对于“定时触发”的计算点，设定其计算周期，单位：秒
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.EntityResult`1">
            <summary>
            写入返回实体
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Data.EntityResult`1.SuccessCount">
            <summary>
            成功的条数
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Data.EntityResult`1.ErrorList">
            <summary>
            失败的数据
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.NamedTypeDataCommon">
            <summary>
            自定义类型数据公用类
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeDataCommon.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeDataCommon.Time">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeDataCommon.Ms">
            <summary>
            毫秒（非毫秒点时该属性会被忽略）
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeDataCommon.Qualitie">
            <summary>
            质量码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeDataCommon.Error">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeDataCommon.Len">
            <summary>
            实际获取的自定义类型标签点数据长度。
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.NamedTypeDataByte">
            <summary>
            自定义类型，Value为Byte数组
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeDataByte.Value">
            <summary>
            Value属性，组装完成的byte数组
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.NamedTypeFieldValue">
            <summary>
            自定义类型的字段的值
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeFieldValue.FieldName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeFieldValue.FieldType">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeFieldValue.FieldLength">
            <summary>
            字段长度
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeFieldValue.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Impl.ArchiveImpl">
            <summary>
            存档文件服务
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Inter.IArchive">
            <summary>
            存档文件服务
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.SetConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            重置链接
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.GetArchivesCount">
            <summary>
            获取存档文件数量
            </summary>
            <returns>存档文件数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.CreateArchive(System.String,System.String,System.Int32)">
            <summary>
            新建历史存档文件并追加到历史数据库
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="size">文件大小，单位为 MB</param>
            <returns>新建历史存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.CreateRangedArchive(System.DateTime,System.DateTime,System.String,System.String,System.Int32)">
            <summary>
            新建指定时间范围的历史存档文件并插入到历史数据库
            </summary>
            <param name="startTime">起始时间</param>
            <param name="endTime">终止时间</param>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="size">文件大小，单位为 MB</param>
            <returns>新建历史存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.AppendArchive(System.String,System.String,Golden.DotNetSDK.Model.Archive.ArchiveState)">
            <summary>
            追加磁盘上的历史存档文件到历史数据库
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="state">文件状态</param>
            <returns>追加历史存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.RemoveArchive(System.String,System.String)">
            <summary>
            从历史数据库中移出历史存档文件
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <returns>移出历史存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.ShiftActived">
            <summary>
            切换活动文件。备注：当前活动文件被写满时该事务被启动，改变当前活动文件的状态为普通状态，在所有历史数据存档文件中寻找未被使用过的插入到前活动文件的右侧并改为活动状态，若找不到则将前活动文件右侧的文件改为活动状态。该事务进行过程中，用锁保证所有读写操作都暂停等待该事务完成
            </summary>
            <returns>切换活动文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.ReactiveArchive(System.String,System.String)">
            <summary>
            激活指定存档文件为活动存档文件
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <returns>激活指定存档文件为活动存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.GetFirstArchive">
            <summary>
            获取首个存档文件的路径、名称、状态
            </summary>
            <returns>获取到的首个存档文件的路径、名称、状态</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.GetNextArchive(System.String,System.String)">
            <summary>
            获取下一个存档文件的路径、名称、状态(备注：当 path 返回内容为 "END" 时表示全部存档文件已经遍历完毕)
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <returns>获取到的下一个存档文件的路径、名称、状态</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.GetArchiveInfo(System.String,System.String,System.Int32)">
            <summary>
            获取存档文件及其附属文件的详细信息
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="identifying">附属文件标识，0 表示获取主文件信息</param>
            <returns>获取到的存档文件及其附属文件的详细信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.UpdateArchive(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            修改存档文件的可配置项(备注: ratedCapacity 与 exCapacity 参数可为 0，表示不修改对应的配置项)
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="ratedCapacity">文件额定大小，单位为 MB</param>
            <param name="exCapacity">附属文件大小，单位为 MB</param>
            <param name="autoMerge">是否自动合并附属文件</param>
            <param name="autoArrange">是否自动整理存档文件</param>
            <returns>修改存档文件的可配置项是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.MergeArchive(System.String,System.String)">
            <summary>
            合并附属文件到所属主文件
            </summary>
            <param name="path">主文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">主文件名</param>
            <returns>合并附属文件到所属主文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.ArrangeArchive(System.String,System.String)">
            <summary>
            整理存档文件，将同一标签点的数据块存放在一起以提高查询效率(该方法还未完成，因此不能使用)
            </summary>
            <param name="path">主文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">主文件名</param>
            <returns>整理存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.ReindexArchive(System.String,System.String)">
            <summary>
            为存档文件重新生成索引，用于恢复数据(该方法还未完成，因此不能使用)
            </summary>
            <param name="path">主文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">主文件名</param>
            <returns>为存档文件重新生成索引是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.QueryBigJob(Golden.DotNetSDK.Model.Archive.ProcessName)">
            <summary>
            查询进程正在执行的后台任务类型、状态和进度(备注：path 及 file 参数可传空指针，对应的信息将不再返回)
            </summary>
            <param name="prosess">进程代号</param>
            <returns>查询到的正在执行的后台任务</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IArchive.BackupArchive(System.String,System.String,System.String)">
            <summary>
            备份主存档文件及其附属文件到指定路径
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="dest">备份目录路径	，必须以"\"或"/"结尾</param>
            <returns>是否备份成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.#ctor(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            构造函数
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.SetConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            重置链接
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.GetArchivesCount">
            <summary>
            获取存档文件数量
            </summary>
            <returns>存档文件数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.CreateArchive(System.String,System.String,System.Int32)">
            <summary>
            新建历史存档文件并追加到历史数据库
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="size">文件兆字节大小，单位为 MB</param>
            <returns>新建历史存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.CreateRangedArchive(System.DateTime,System.DateTime,System.String,System.String,System.Int32)">
            <summary>
            新建指定时间范围的历史存档文件并插入到历史数据库
            </summary>
            <param name="startTime">起始时间</param>
            <param name="endTime">终止时间</param>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="size">文件大小，单位为 MB</param>
            <returns>新建历史存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.AppendArchive(System.String,System.String,Golden.DotNetSDK.Model.Archive.ArchiveState)">
            <summary>
            追加磁盘上的历史存档文件到历史数据库
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="state">文件状态</param>
            <returns>追加历史存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.RemoveArchive(System.String,System.String)">
            <summary>
            从历史数据库中移出历史存档文件
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <returns>移出历史存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.ShiftActived">
            <summary>
            切换活动文件。备注：当前活动文件被写满时该事务被启动，改变当前活动文件的状态为普通状态，在所有历史数据存档文件中寻找未被使用过的插入到前活动文件的右侧并改为活动状态，若找不到则将前活动文件右侧的文件改为活动状态。该事务进行过程中，用锁保证所有读写操作都暂停等待该事务完成
            </summary>
            <returns>切换活动文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.ReactiveArchive(System.String,System.String)">
            <summary>
            激活指定存档文件为活动存档文件
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <returns>激活指定存档文件为活动存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.GetFirstArchive">
            <summary>
            获取首个存档文件的路径、名称、状态
            </summary>
            <returns>获取到的首个存档文件的路径、名称、状态</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.GetNextArchive(System.String,System.String)">
            <summary>
            获取下一个存档文件的路径、名称、状态(备注：当 path 返回内容为 "END" 时表示全部存档文件已经遍历完毕)
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <returns>获取到的下一个存档文件的路径、名称、状态</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.GetArchiveInfo(System.String,System.String,System.Int32)">
            <summary>
            获取存档文件及其附属文件的详细信息
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="identifying">附属文件标识，0 表示获取主文件信息</param>
            <returns>获取到的存档文件及其附属文件的详细信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.UpdateArchive(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            修改存档文件的可配置项(备注: ratedCapacity 与 exCapacity 参数可为 0，表示不修改对应的配置项)
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="ratedCapacity">文件额定大小，单位为 MB</param>
            <param name="exCapacity">附属文件大小，单位为 MB</param>
            <param name="autoMerge">是否自动合并附属文件</param>
            <param name="autoArrange">是否自动整理存档文件</param>
            <returns>修改存档文件的可配置项是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.MergeArchive(System.String,System.String)">
            <summary>
            合并附属文件到所属主文件
            </summary>
            <param name="path">主文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">主文件名</param>
            <returns>合并附属文件到所属主文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.ArrangeArchive(System.String,System.String)">
            <summary>
            整理存档文件，将同一标签点的数据块存放在一起以提高查询效率(该方法还未完成，因此不能使用)
            </summary>
            <param name="path">主文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">主文件名</param>
            <returns>整理存档文件是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.ReindexArchive(System.String,System.String)">
            <summary>
            为存档文件重新生成索引，用于恢复数据(该方法还未完成，因此不能使用)
            </summary>
            <param name="path">主文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">主文件名</param>
            <returns>为存档文件重新生成索引是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.BackupArchive(System.String,System.String,System.String)">
            <summary>
            备份主存档文件及其附属文件到指定路径
            </summary>
            <param name="path">文件所在目录路径，必须以"\"或"/"结尾</param>
            <param name="file">文件名</param>
            <param name="dest">备份目录路径	，必须以"\"或"/"结尾</param>
            <returns>是否备份成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ArchiveImpl.QueryBigJob(Golden.DotNetSDK.Model.Archive.ProcessName)">
            <summary>
            查询进程正在执行的后台任务类型、状态和进度(备注：path 及 file 参数可传空指针，对应的信息将不再返回)
            </summary>
            <param name="prosess">进程代号</param>
            <returns>查询到的正在执行的后台任务</returns>
        </member>
        <member name="T:Golden.DotNetSDK.Impl.BaseImpl">
            <summary>
            标签点信息服务
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Inter.IBase">
            <summary>
            标签点信息服务
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.SetConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            重置链接
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.AppendTable(System.String,System.String)">
            <summary>
            添加新表
            </summary>
            <param name="tableName">表的名称</param>
            <param name="desc">描述</param>
            <returns>返回新建表的编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTablesCount">
            <summary>
            取得标签点表的个数
            </summary>
            <returns>标签点表的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTablesId">
            <summary>
            取得所有的表编号
            </summary>
            <returns>所有的表编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTableSizeById(System.Int32)">
            <summary>
            根据表的编号获取表中包含的标签点数量
            </summary>
            <param name="id">表的编号</param>
            <returns>表中包含标签点数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTableSizeByName(System.String)">
            <summary>
            根据表名称获取表中包含的标签点数量 
            </summary>
            <param name="name">表名称</param>
            <returns>表中标签点数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTablePropertyById(System.Int32)">
            <summary>
            根据表的编号取得表的属性
            </summary>
            <param name="id">表的编号</param>
            <returns>包含表属性的表对象</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTablePropertyByName(System.String)">
            <summary>
            根据表的名称取得表的属性
            </summary>
            <param name="name">表的名称</param>
            <returns>包含表属性的表对象</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.ExistTable(System.String)">
            <summary>
            判断表是否存在
            </summary>
            <param name="tableName">表名称</param>
            <returns>存在返回True，不存在返回false</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.InsertPoint(Golden.DotNetSDK.Model.Base.FullPoint)">
            <summary>
            创建完整的标签点
            备注：model.BasePoint.Classof 中 Classof=1表示采集点；Classof=2表示计算点；Classof=3表示采集计算点
                  model.ClacPoint.Trigger 中 Trigger=1表示事件触发，Trigger=2表示周期触发，Trigger=0表示无触发
            </summary>
            <param name="fullPoint">完整的标签点</param>
            <returns>创建成功后的标签点编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.InsertMinPoint(Golden.DotNetSDK.Model.Base.MinPoint)">
            <summary>
            最简方式添加标签点
            </summary>
            <param name="minPoint">最小属性实体</param>
            <returns>创建成功后的标签点编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.InsertNamedTypePoint(Golden.DotNetSDK.Model.Base.NamedTypePoint)">
            <summary>
            创建自定义类型的标签点
            </summary>
            <param name="namedTypePoint">自定义类型测点</param>
            <returns>创建成功后测 的编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.CreateNamedType(System.String,Golden.DotNetSDK.Model.Base.NameDataTypeField[],System.String)">
            <summary>
            创建自定义类型
            </summary>
            <param name="namedTypeName">自定义类型的名称</param>
            <param name="fields">组成自定义类型的字段</param>
            <param name="Desc">自定义类型的描述</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetNamedTypesCount">
            <summary>
            获取所有的自定义类型的总数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetAllNamedTypes">
            <summary>
            获取所有自定义类型名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetAllNamedTypesAndFieldsCount">
            <summary>
            获取所有自定义类型的名称对应字段数量
            </summary>
            <returns>自定义类型名称对应字段数量的集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetNamedType(System.String)">
            <summary>
            根据自定义类型名称获取自定义类型的属性
            </summary>
            <param name="name">自定义类型的名称</param>
            <returns>自定义类型的属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.RemoveNamedType(System.String)">
            <summary>
            删除自定义类型
            </summary>
            <param name="name">自定义类型名称</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetNamedTypeNamesProperty(System.Int32[])">
            <summary>
            根据标签点id查询标签点所对应的自定义类型的名字和字段总数（该方法只针对自定义类型有效）
            </summary>
            <param name="ids">测点ids</param>
            <returns>测点自定义名称和气对应的自定义字段的数量（返回获取成功的数据）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetRecycledNamedTypeNamesProperty(System.Int32[])">
            <summary>
            根据标签点id查询回收站中 标签点所 对应 的自定义类型的名字和字段总数（ 该方法只针对自定义类型有效）
            </summary>
            <param name="ids">测点ids</param>
            <returns>测点自定义名称和气对应的自定义字段的数量 （返回获取成功的数据）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.RemovePointById(System.Int32)">
            <summary>
            根据 编号 删除单个标签点
            </summary>
            <param name="id">标签点编号</param>
            <returns>删除是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.RemovePointByName(System.String)">
            <summary>
            根据标签点全名删除单个标签点
            </summary>
            <param name="name">标签点全名称</param>
            <returns>删除标签点是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetPointsProperty(System.Int32[])">
            <summary>
            批量获取标签点属性
            </summary>
            <param name="ids">基本标签点数组,id字段指定需要得到属性的标签点</param>
            <returns>标签点属性集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetMinPointProperty(System.String[])">
            <summary>
            批量获取最小属性的标签点
            </summary>
            <param name="tableTags">标签点全名称</param>
            <returns>最小属性标签点</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.Search(Golden.DotNetSDK.Model.Base.SearchCondition,System.Int32,Golden.DotNetSDK.Model.Base.DataSort)">
            <summary>
            在数据表中搜索符合条件的标签点，支持模糊查询  * 或者  ?(*代表任意多个字符,?代表任意一个字符,一个汉字为2个字符)
            </summary>
            <param name="condition">查询条件</param>
            <param name="count">查询条数</param>
            <param name="sort">排序方式</param>
            <returns>符合条件的标签点</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.Search(Golden.DotNetSDK.Model.Base.SearchConditionTotal,System.Int32,Golden.DotNetSDK.Model.Base.DataSort)">
            <summary>
            在数据表中搜索符合条件的标签点，支持模糊查询  * 或者  ?(*代表任意多个字符,?代表任意一个字符,一个汉字为2个字符)
            </summary>
            <param name="condition">查询条件</param>
            <param name="count">查询条数</param>
            <param name="sort">符合条件的标签点</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.SearchPointsCount(Golden.DotNetSDK.Model.Base.SearchConditionTotal)">
            <summary>
            在数据表中搜索符合条件的标签点的条数，支持模糊查询  * 或者  ?(*代表任意多个字符,?代表任意一个字符,一个汉字为2个字符)
            </summary>
            <param name="condition">查询条件</param>
            <returns>搜索的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.SearchInBatches(System.Int32,Golden.DotNetSDK.Model.Base.SearchCondition,System.Int32,Golden.DotNetSDK.Model.Base.DataSort)">
            <summary>
            分批继续搜索符合条件的标签点，使用标签点名时支持通配符
            </summary>
            <param name="start">搜索起始位置</param>
            <param name="condition">查询条数</param>
            <param name="count">需要取得标签点的个数</param>
            <param name="sort">排序方式</param>
            <returns>搜索到的标签点</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.RemoveTableById(System.Int32)">
            <summary>
            根据数据表编号删除数据表
            </summary>
            <param name="id">数据表编号</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.RemoveTableByName(System.String)">
            <summary>
            根据表名删除表及表中标签点
            </summary>
            <param name="tableName">表名</param>
            <returns>删除表及表中标签点是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.UpdatePointProperty(Golden.DotNetSDK.Model.Base.FullPoint)">
            <summary>
            更新单个标签点属性
            </summary>
            <param name="fullPoint">完整标签点</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.FindPoints(System.String[])">
            <summary>
            批量获取最小属性的标签点
            </summary>
            <param name="tableTags">标签点全名称</param>
            <returns>最小属性标签点</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.SortPoints(System.Int32[],Golden.DotNetSDK.Model.Base.TagFieldIndex,Golden.DotNetSDK.Model.Base.TagSortFlag)">
            <summary>
            根据标签属性字段对标签点标识进行排序
            </summary>
            <param name="ids">标签点标识列表</param>
            <param name="index">将根据该字段对 ID 进行排序</param>
            <param name="flag">根据标签属性字段对标签点标识进行排序的方式</param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.UpdateTableName(System.Int32,System.String)">
            <summary>
            根据数据表编号更新表名称
            </summary>
            <param name="tableId">要修改表的标识</param>
            <param name="tableName">新的标签点表名称</param>
            <returns>是否修改成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.UpdateTableDescById(System.Int32,System.String)">
            <summary>
            根据数据表编号更新描述
            </summary>
            <param name="tableId">数据表编号</param>
            <param name="desc">新的数据表描述</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.UpdateTableDescByName(System.String,System.String)">
            <summary>
            根据数据表名称更新描述
            </summary>
            <param name="tableName">数据表名称</param>
            <param name="desc">新的数据表描述</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.RecoverPoint(System.Int32,System.Int32)">
            <summary>
            恢复已删除标签点
            </summary>
            <param name="tableId">要将标签点恢复到的表标识</param>
            <param name="pointId">待恢复的标签点标识</param>
            <returns>是否恢复成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.PurgePoint(System.Int32)">
            <summary>
            清除标签点，备注：本接口仅对可回收标签点(通过接口RemovePointById/RemovePointByName)有效，对正常的标签点没有作用
            </summary>
            <param name="pointId">要清除的标签点标识</param>
            <returns>是否清除成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetRecycledPointsCount">
            <summary>
            获取可回收标签点数量
            </summary>
            <returns>可回收标签点的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetRecycledPoints(System.Int32)">
            <summary>
            获取可回收标签点编号列表
            </summary>
            <param name="count">需要获取的数量</param>
            <returns>实际获取到的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.SearchRecycledPoints(Golden.DotNetSDK.Model.Base.SearchCondition,Golden.DotNetSDK.Model.Base.DataSort,System.Int32)">
            <summary>
            搜索符合条件的可回收标签点，使用标签点名时支持通配符
            </summary>
            <param name="condition">搜索条件</param>
            <param name="sort">排序条件</param>
            <param name="count">搜索的条数</param>
            <returns>符合条件的标签点的个数和编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.SearchRecycledPointsInBatches(System.Int32,Golden.DotNetSDK.Model.Base.SearchCondition,Golden.DotNetSDK.Model.Base.DataSort,System.Int32)">
            <summary>
            分批搜索符合条件的可回收标签点
            </summary>
            <param name="start">搜索的起始位置</param>
            <param name="condition">搜索条件</param>
            <param name="sort">排序条件</param>
            <param name="count">搜索的个数</param>
            <returns>符合条件的标签点的个数和编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetRecycledPointProperty(System.Int32)">
            <summary>
            获取可回收标签点的属性
            </summary>
            <param name="id">标签点编号</param>
            <returns>可回收标签点属性信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.ClearRecycler">
            <summary>
            清空标签点回收站
            </summary>
            <returns>是否清空成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.SubscribeTags(Golden.DotNetSDK.Model.TagsChangeDelegate)">
            <summary>
            批量标签点属性更改通知订阅
            </summary>
            <param name="callBack">回调接口</param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.SubscribeTagsEx(RTDB.Data.Client.Enum.Golden_Option,System.Object,Golden.DotNetSDK.Model.TagsChangeDelegateEx)">
            <summary>
            批量标签点属性更改通知订阅  2017.03.28
            </summary>
            <param name="Golden_Option">API 在连接中断后是否自动重连,0表示重连，1表示不重连，默认为0</param>
            <param name="Object">用户输入参数</param>
            <param name="callBack">回调接口</param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.CancelSubscribeTags(System.Int32)">
            <summary>
            取消标签点属性更改通知订阅
            </summary>
            <param name="handler">连接句柄</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetNamedTypePointsCount(System.String)">
            <summary>
            获取指定自定义类型的所有测点的个数
            </summary>
            <param name="name">自定义类型名称</param>
            <returns>测点个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetBaseTypePointsCount(Golden.DotNetSDK.Model.Base.DataType)">
            <summary>
            获取内置基本类型所有测点的个数
            </summary>
            <param name="type">基本类型</param>
            <returns>指定基本类型所有测点的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.ModifyNamedType(System.String,System.String,System.String,System.String[],System.String[])">
            <summary>
            修改自定义类型
            </summary>
            <param name="namedTypeName">自定义类型名称</param>
            <param name="modifyNamedTypeName">要修改的自定义类型名称</param>
            <param name="modifyNamedTypeDesc">要修改的自定义类型描述</param>
            <param name="modifyFieldName">要修改的该自定义类型所有字段的名称</param>
            <param name="modifyFieldDesc">要修改的该自定义类型所有字段的描述</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTypesProperties(System.Int32[])">
            <summary>
            根据ids数组获取其对应的标签点类型信息集合
            备注： 该方法返回实体中存在小错误码Error，若小错误码Error==0,则取得的数据正确，如果不为0，则取值出现错误
            </summary>
            <param name="ids">ids数组</param>
            <returns>实体集合 如果没有查询到对应的类型，则返回Null</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetPointValueTypes(System.Int32[])">
            <summary>
            根据ids获取对应的测点值的类型
            </summary>
            <param name="ids">测点id</param>
            <returns>类型实体集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTagNamesProperties(System.Int32[])">
            <summary>
            根据ids查询标签点名称对应的实体集合
            </summary>
            <param name="ids">标签点ids</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTagNames(System.Int32[])">
            <summary>
            根据ids查询测点名称
            </summary>
            <param name="ids">测点ids</param>
            <returns>测点名称</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTableTagNamesProperties(System.Int32[])">
            <summary>
            根据ids查询标签点全名称的实体的集合
            </summary>
            <param name="ids">标签点ids</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTableTagNames(System.Int32[])">
            <summary>
            根据ids查询标签点全名称
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetLocationsProperties(System.Int32[],Golden.DotNetSDK.Model.Base.LocationValue)">
            <summary>
            根据标签点ids获取指定的设备地址的值
            </summary>
            <param name="ids">标签点ids数组</param>
            <param name="location">选择第几个设备枚举</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetMses(System.Int32[])">
            <summary>
            根据标签点ids的数组获取标签点的精度
            </summary>
            <param name="ids"></param>
            <returns>精度数组 (0表示秒点，1表示毫秒点)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetCompdevs(System.Int32[])">
            <summary>
            根据标签点ids数组获取标签点是否压缩的属性
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>返回压缩偏差</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetCompmaxs(System.Int32[])">
            <summary>
            根据ids数组获取标签点压缩最长压缩间隔的属性
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>最长压缩间隔属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetCompmins(System.Int32[])">
            <summary>
            根据ids数组获取标签点压缩最短压缩间隔的属性
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>最短压缩间隔属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetExcdevs(System.Int32[])">
            <summary>
            根据ids数组获取例外偏差属性
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>例外偏差属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetExcMaxs(System.Int32[])">
            <summary>
            根据ids数组获取最长例外间隔
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>最长例外间隔属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetExcMins(System.Int32[])">
            <summary>
            根据ids数组获取最短例外间隔
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>最短例外间隔属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetClassofs(System.Int32[])">
            <summary>
            根据ids数组获取标签点类别  
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点属性类别 （Classof=0表示基本点；Classof=1表示采集点；Classof=2表示计算点；Classof=3表示采集计算点）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTables(System.Int32[])">
            <summary>
            根据ids数组获取标签点所属表
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点所属表的ids</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetSummarys(System.Int32[])">
            <summary>
            用于设定是否生成标签点统计信息，从而加速历史数据统计过程。
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点加速统计（0表示OFF，1表示ON）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetMirrors(System.Int32[])">
            <summary>
            根据ids获取标签点镜像是否启动
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点镜像属性值 (true:表示镜像开启，false：表示镜像关闭)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetCompress(System.Int32[])">
            <summary>
            根据ids获取标签点压缩属性值（Compress=0表示OFF，Compress=1表示ON）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点压缩属性值(true:表示压缩开启，false:表示压缩关闭)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetSteps(System.Int32[])">
            <summary>
            根据ids获取标签点阶跃属性值
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点阶跃属性值 (true:表示阶跃属性开启，false:表示关闭)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetShutDowns(System.Int32[])">
            <summary>
            根据ids获取标签点停机状态
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点停机状态字 (true:表示出于停机状态；false:表示没有出于停机状态)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetArchives(System.Int32[])">
            <summary>
            根据ids获取标签点数据是否需要存档
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点数据是否存档 (true:表示开启了存档；false表示不需要存档)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetDescs(System.Int32[])">
            <summary>
            根据ids获取标签点文字性描述
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点文字性描述</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetUnits(System.Int32[])">
            <summary>
            根据ids获取工程单位
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>工程单位</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetChangers(System.Int32[])">
            <summary>
            根据ids获取标签点属性最后一次被修改的用户名
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点属性最后一次被修改的用户名</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetCreators(System.Int32[])">
            <summary>
            根据ids获取标签点创建者的用户名
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点创建者的用户名</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetLowLimits(System.Int32[])">
            <summary>
            根据ids获取标签点的量程下限
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>量程下限</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetHighLimits(System.Int32[])">
            <summary>
            根据ids获取标签点的量程上限
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>量程上限</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTypicals(System.Int32[])">
            <summary>
            根据ids获取标签点设置的典型值（大于等于量程下限，小于等于量程上限。）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>典型值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetChangeDates(System.Int32[])">
            <summary>
            根据ids获取标签点最后一次被修改的时间
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点最后一次被修改的时间</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetCreateDates(System.Int32[])">
            <summary>
            根据ids获取标签点被创建的时间
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点被创建的时间</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetDigits(System.Int32[])">
            <summary>
            根据ids获取标签点的数值位数，用来控制数值的显示格式(Digit值处于-20到10之间)
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>数值位数（如果为0或正数，表示数值的小数位数，如果为负数，表示数值的有效位数）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetCompdevPercents(System.Int32[])">
            <summary>
            根据ids获取压缩偏差百分比
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>压缩偏差百分比</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetExcdevPercents(System.Int32[])">
            <summary>
            根据ids获取例外偏差百分比
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>例外偏差百分比</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetSources(System.Int32[])">
            <summary>
            根据ids获取数据源，将标签点同某些接口或某些模块相关联
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>数据源（每个数据源字符串只允许由26个字母（大小写敏感）和数字（0-9）组成，字节长度不要超出255，多余的部分会被截断。）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetIsScans(System.Int32[])">
            <summary>
            根据ids获取标签点是否在采集数据
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>采集属性值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetInstruments(System.Int32[])">
            <summary>
            根据ids获取设备标签（字节长度不要超出49，多余的部分会被截断）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>设备标签</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetUserInts(System.Int32[],Golden.DotNetSDK.Model.Base.UserIntValue)">
            <summary>
            根据ids,自定义整数类型批量获取自定义整数的值（缺省值为0）
            </summary>
            <param name="ids">标签点ids数组</param>
            /// <param name="userint">自定义整数类型枚举值</param>
            <returns>自定义整数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetUserReals(System.Int32[],Golden.DotNetSDK.Model.Base.UserRealValue)">
            <summary>
            根据ids批量获取自定义单精度浮点数（缺省值全部为0）
            </summary>
            <param name="ids">标签点ids数组</param>
            <param name="userreal">自定义浮点数类型枚举值</param>
            <returns>自定义浮点数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetEquations(System.Int32[])">
            <summary>
            根据ids批量获取计算触发方式（计算点）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>方程式（字节长度不要超出2047，长度超长的方程式将被拒绝设置入库，返回一个错误，避免错误的方程式进入系统，引发不安全因素）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTriggers(System.Int32[])">
            <summary>
            根据ids批量获取触发方式（计算点）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>触发方式（用于设置实时方程式服务对单个计算点的计算触发采用"事件触发"还是"周期触发"，对于"周期触发"以"事件触发"作为其先决判断条件，如果"事件触发"不满足，则不进行"周期触发"）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetTimecopys(System.Int32[])">
            <summary>
            根据ids批量获取计算结果时间戳参考
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>时间戳参考（0:表示采用计算时间作为计算结果时间戳；1:表示采用输入标签点中的最晚时间作为计算结果时间戳；2:表示采用输入标签点中的最早时间作为计算结果时间戳）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetPeriods(System.Int32[])">
            <summary>
            根据ids批量获取标签点计算周期（单位：秒）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>计算周期（标签点触发方式为周期触发）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.QueryLoadMemory">
            <summary>
            查询标签点属性加载到内存中的当前配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.SetLoadMemory(Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag[])">
            <summary>
            设置标签点属性加载到内存中的当前配置
            </summary>
            <param name="loadMemoryFlag">属性枚举数组</param>
            <returns>返回加载成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.QueryNeedMemorySize(Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag)">
            <summary>
            查询根据配置加载到内存中的标签点属性所占用的内存
            </summary>
            <param name="loadMemoryFlag">加载的测点的枚举</param>
            <returns>需要的内存大小（字节）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetEquationById(System.Int32)">
            <summary>
            根ID径获取方程式
            </summary>
            <param name="id">方程式ID</param>
            <returns>方程式</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetEquationByFileName(System.String)">
            <summary>
            根据路径获取方程式
            </summary>
            <param name="fileName">方程式文件名（带后缀名 .xml）</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.InsertMaxPoint(Golden.DotNetSDK.Model.Base.FullPoint)">
            <summary>
            创建计算点（方程式所允许的最大属性创建）
            </summary>
            <param name="fullPoint">测点全属性</param>
            <returns>测点id</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetMaxPointsProperty(System.Int32[])">
            <summary>
            按最大长度批量获取标签点属性
            </summary>
            <param name="ids">计算点ids</param>
            <returns>计算点属性集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.GetRecycledMaxPointProperty(Golden.DotNetSDK.Model.Base.FullPoint)">
            <summary>
            按最大长度获取可回收标签点的属性
            </summary>
            <param name="fullPoint">FullPoint</param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IBase.UpdateMaxPointProperty(Golden.DotNetSDK.Model.Base.FullPoint)">
             <summary>
             按最大长度更新单个标签点属性
             </summary>
             <param name="fullPoint">FullPoint</param>
            备注(其中 id、table、type、millisecond 字段不能修改，
            changedate、changer、createdate、creator 字段由系统维护，其余字段均可修改)
             <returns></returns>
        </member>
        <member name="F:Golden.DotNetSDK.Impl.BaseImpl._connection">
            <summary>
            The _connection
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Impl.BaseImpl._methodConvert">
            <summary>
            The _method convert
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.#ctor(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Golden.DotNetSDK.Impl.BaseImpl"/> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SetConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            重置链接
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetErrorMessage(System.UInt32)">
            <summary>
             释放非托管内存，throw 错误信息
            </summary>
            <param name="_result">The _result.</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetErrorMessage(System.UInt32,System.IntPtr[])">
            <summary>
             释放非托管内存，throw 错误信息
            </summary>
            <param name="_result"></param>
            <param name="intPtrs"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.ReleaseMemory(System.IntPtr[])">
            <summary>
            释放非托管内存
            </summary>
            <param name="intPtrs">指针</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetErrorMessage(System.UInt32,System.IntPtr)">
            <summary>
             释放非托管内存，throw 错误信息
            </summary>
            <param name="_result"></param>
            <param name="inptr"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SmarllErrorCodeHandle(System.Int32,System.IntPtr[],System.UInt32[])">
            <summary>
            释放非托管内存，throw 错误信息
            </summary>
            <param name="count"></param>
            <param name="intPtrs"></param>
            <param name="errors"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SmarllErrorCodeHandle(System.Int32,System.UInt32[])">
            <summary>
            获取错误码，处理异常
            </summary>
            <param name="count">传出成功的条数</param>
            <param name="errors">错误码</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.AppendTable(System.String,System.String)">
            <summary>
            添加新表
            </summary>
            <param name="tableName">表的名称</param>
            <param name="desc">描述</param>
            <returns>返回新建表的编号</returns>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException"></exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTablesCount">
            <summary>
            取得标签点表的个数
            </summary>
            <returns>标签点表的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTablesId">
            <summary>
            取得所有的表编号
            </summary>
            <returns>所有的表编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTableSizeById(System.Int32)">
            <summary>
            根据表的编号获取表中包含的标签点数量
            </summary>
            <param name="id">表的编号</param>
            <returns>表中包含标签点数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTableSizeByName(System.String)">
            <summary>
            根据表名称获取表中包含的标签点数量
            </summary>
            <param name="name">表名称</param>
            <returns>表中标签点数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTablePropertyById(System.Int32)">
            <summary>
            根据表的编号取得表的属性
            </summary>
            <param name="id">表的编号</param>
            <returns>包含表属性的表对象</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.ExistTable(System.String)">
            <summary>
            判断表是否存在
            </summary>
            <param name="tableName">表名称</param>
            <returns>存在返回True，不存在返回false</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTablePropertyByName(System.String)">
            <summary>
            根据表的名称取得表的属性
            </summary>
            <param name="name">表的名称</param>
            <returns>包含表属性的表对象</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.InsertPoint(Golden.DotNetSDK.Model.Base.FullPoint)">
            <summary>
            创建完整的标签点
            </summary>
            <param name="fullPoint">完整的标签点</param>
            <returns>创建成功后的标签点编号</returns>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException"></exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.InsertMinPoint(Golden.DotNetSDK.Model.Base.MinPoint)">
            <summary>
            最简方式添加标签点
            </summary>
            <param name="minPoint">最小属性实体</param>
            <returns>创建成功后的标签点编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.InsertNamedTypePoint(Golden.DotNetSDK.Model.Base.NamedTypePoint)">
            <summary>
            创建自定义类型的标签点
            </summary>
            <param name="namedTypePoint">自定义类型测点</param>
            <returns>创建成功后自定义类型的编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.CreateNamedType(System.String,Golden.DotNetSDK.Model.Base.NameDataTypeField[],System.String)">
            <summary>
            创建自定义类型
            </summary>
            <param name="namedTypeName">自定义类型的名称</param>
            <param name="fields">组成自定义类型的字段</param>
            <param name="desc">自定义类型的描述</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetNamedTypesCount">
            <summary>
            获取所有的自定义类型的总数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetAllNamedTypes">
            <summary>
            获取所有自定义类型名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetAllNamedTypesAndFieldsCount">
            <summary>
            获取所有自定义类型的名称对应字段数量
            </summary>
            <returns>自定义类型名称对应字段数量的集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetNamedType(System.String)">
            <summary>
            根据自定义类型名称获取自定义类型的属性
            </summary>
            <param name="name">自定义类型的名称</param>
            <returns>自定义类型的属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.RemoveNamedType(System.String)">
            <summary>
            删除自定义类型
            </summary>
            <param name="name">自定义类型名称</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetNamedTypeNamesProperty(System.Int32[])">
            <summary>
            根据标签点id查询标签点所对应的自定义类型的名字和字段总数（该方法只针对自定义类型有效）
            </summary>
            <param name="ids">测点id</param>
            <returns>测点自定义名称和气对应的自定义字段的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetRecycledNamedTypeNamesProperty(System.Int32[])">
            <summary>
            根据标签点id查询回收站中 标签点所 对应 的自定义类型的名字和字段总数（ 该方法只针对自定义类型有效）
            </summary>
            <param name="ids">测点ids</param>
            <returns>测点自定义名称和气对应的自定义字段的数量 （返回获取成功的数据）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetNamedTypeNamesProperty(System.Int32[],System.Boolean)">
            <summary>
            根据标签点id查询回收站中 标签点所 对应 的自定义类型的名字和字段总数
            </summary>
            <param name="ids">测点ids</param>
            <param name="isGetFromRecycle">是否从垃圾箱中获取</param>
            <returns>测点自定义名称和气对应的自定义字段的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetNamedTypePointsCount(System.String)">
            <summary>
            获取指定自定义类型的所有测点的个数
            </summary>
            <param name="name">自定义类型名称</param>
            <returns>测点个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetBaseTypePointsCount(Golden.DotNetSDK.Model.Base.DataType)">
            <summary>
            获取内置基本类型所有测点的个数
            </summary>
            <param name="type">基本类型</param>
            <returns>指定基本类型所有测点的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.ModifyNamedType(System.String,System.String,System.String,System.String[],System.String[])">
            <summary>
            修改自定义类型
            </summary>
            <param name="namedTypeName">自定义类型名称</param>
            <param name="modifyNamedTypeName">要修改的自定义类型名称</param>
            <param name="modifyNamedTypeDesc">要修改的自定义类型描述</param>
            <param name="modifyFieldName">要修改的该自定义类型所有字段的名称</param>
            <param name="modifyFieldDesc">要修改的该自定义类型所有字段的描述</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTableIdByName(System.String)">
            <summary>
            根据表名获得表的id
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.RemovePointById(System.Int32)">
            <summary>
            根据 编号 删除单个标签点
            </summary>
            <param name="id">标签点编号</param>
            <returns>删除是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.RemovePointByName(System.String)">
            <summary>
            根据标签点全名删除单个标签点
            </summary>
            <param name="name">标签点全名称</param>
            <returns>删除标签点是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetPointsProperty(System.Int32[])">
            <summary>
            批量获取标签点属性(如果传入的批量的标签点中有数据库不存在的点，则返回的list信息中没有该条记录)
            </summary>
            <param name="ids">基本标签点数组,id字段指定需要得到属性的标签点</param>
            <returns>标签点属性集合</returns>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException">
            </exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetMinPointProperty(System.String[])">
            <summary>
            批量获取最小属性的标签点
            </summary>
            <param name="tableTags">标签点全名称</param>
            <returns>最小属性标签点</returns>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException"></exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.Search(Golden.DotNetSDK.Model.Base.SearchCondition,System.Int32,Golden.DotNetSDK.Model.Base.DataSort)">
            <summary>
            在数据表中搜索符合条件的标签点，支持模糊查询  * 或者  ?(*代表任意多个字符,?代表任意一个字符,一个汉字为2个字符)
            </summary>
            <param name="condition">查询条件</param>
            <param name="count">查询条数</param>
            <param name="sort">排序方式</param>
            <returns>符合条件的标签点</returns>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException"></exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.Search(Golden.DotNetSDK.Model.Base.SearchConditionTotal,System.Int32,Golden.DotNetSDK.Model.Base.DataSort)">
            <summary>
            在数据表中搜索符合条件的标签点，支持模糊查询  * 或者  ?(*代表任意多个字符,?代表任意一个字符,一个汉字为2个字符)
            </summary>
            <param name="condition">查询条件</param>
            <param name="count">查询条数</param>
            <param name="sort">符合条件的标签点</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SearchPointsCount(Golden.DotNetSDK.Model.Base.SearchConditionTotal)">
            <summary>
            在数据表中搜索符合条件的标签点的条数，支持模糊查询  * 或者  ?(*代表任意多个字符,?代表任意一个字符,一个汉字为2个字符)
            </summary>
            <param name="condition">查询条件</param>
            <returns>搜索的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SearchInBatches(System.Int32,Golden.DotNetSDK.Model.Base.SearchCondition,System.Int32,Golden.DotNetSDK.Model.Base.DataSort)">
            <summary>
            分批继续搜索符合条件的标签点，使用标签点名时支持通配符
            </summary>
            <param name="start">搜索起始位置</param>
            <param name="condition">查询条数</param>
            <param name="count">需要取得标签点的个数</param>
            <param name="sort">排序方式</param>
            <returns>搜索到的标签点</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.RemoveTableById(System.Int32)">
            <summary>
            根据数据表编号删除数据表
            </summary>
            <param name="id">数据表编号</param>
            <returns>是否删除成功</returns>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException"></exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.RemoveTableByName(System.String)">
            <summary>
            根据表名删除表及表中标签点
            </summary>
            <param name="tableName">表名</param>
            <returns>删除表及表中标签点是否成功</returns>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException"></exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.UpdatePointProperty(Golden.DotNetSDK.Model.Base.FullPoint)">
            <summary>
            更新单个标签点属性
            </summary>
            <param name="fullPoint">完整标签点</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.FindPoints(System.String[])">
            <summary>
            批量获取最小属性的标签点(如果所查的标签点中不存在改点，则不返回该标签点的属性)
            </summary>
            <param name="tableTags">标签点全名称</param>
            <returns>最小属性标签点</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SortPoints(System.Int32[],Golden.DotNetSDK.Model.Base.TagFieldIndex,Golden.DotNetSDK.Model.Base.TagSortFlag)">
            <summary>
            根据标签属性字段对标签点标识进行排序
            </summary>
            <param name="ids">标签点标识列表</param>
            <param name="index">将根据该字段对 ID 进行排序</param>
            <param name="flag">根据标签属性字段对标签点标识进行排序的方式</param>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException"></exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.UpdateTableName(System.Int32,System.String)">
            <summary>
            根据数据表编号更新表名称
            </summary>
            <param name="tableId">要修改表的标识</param>
            <param name="tableName">新的标签点表名称</param>
            <returns>是否修改成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.UpdateTableDescById(System.Int32,System.String)">
            <summary>
            根据数据表编号更新描述
            </summary>
            <param name="tableId">数据表编号</param>
            <param name="desc">新的数据表描述</param>
            <returns>更新是否成功</returns>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException"></exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.UpdateTableDescByName(System.String,System.String)">
            <summary>
            根据表数据表名称更新描述
            </summary>
            <param name="tableName">数据表名称</param>
            <param name="desc">新的数据表描述</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.RecoverPoint(System.Int32,System.Int32)">
            <summary>
            恢复已删除标签点
            </summary>
            <param name="tableId">要将标签点恢复到的表标识</param>
            <param name="pointId">待恢复的标签点标识</param>
            <returns>是否恢复成功</returns>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException"></exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.PurgePoint(System.Int32)">
            <summary>
            清除标签点，备注：本接口仅对可回收标签点(通过接口RemovePointById/RemovePointByName)有效，对正常的标签点没有作用
            </summary>
            <param name="pointId">要清除的标签点标识</param>
            <returns>是否清除成功</returns>
            <exception cref="T:Golden.DotNetSDK.Common.RTDBException"></exception>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetRecycledPointsCount">
            <summary>
            获取可回收标签点数量
            </summary>
            <returns>可回收标签点的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetRecycledPoints(System.Int32)">
            <summary>
            获取可回收标签点编号列表
            </summary>
            <param name="count">需要获取的数量</param>
            <returns>实际获取到的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SearchRecycledPoints(Golden.DotNetSDK.Model.Base.SearchCondition,Golden.DotNetSDK.Model.Base.DataSort,System.Int32)">
            <summary>
            搜索符合条件的可回收标签点，使用标签点名时支持通配符
            </summary>
            <param name="condition">搜索条件</param>
            <param name="sort">排序条件</param>
            <param name="count">搜索的条数</param>
            <returns>符合条件的标签点的个数和编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SearchRecycledPointsInBatches(System.Int32,Golden.DotNetSDK.Model.Base.SearchCondition,Golden.DotNetSDK.Model.Base.DataSort,System.Int32)">
            <summary>
            分批搜索符合条件的可回收标签点
            </summary>
            <param name="start">搜索的起始位置</param>
            <param name="condition">搜索条件</param>
            <param name="sort">排序条件</param>
            <param name="count">搜索的个数</param>
            <returns>符合条件的标签点的个数和编号</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetRecycledPointProperty(System.Int32)">
            <summary>
            获取可回收标签点的属性
            </summary>
            <param name="id">标签点编号</param>
            <returns>可回收标签点属性信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.ClearRecycler">
            <summary>
            清空标签点回收站
            </summary>
            <returns>是否清空成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SubscribeTags(Golden.DotNetSDK.Model.TagsChangeDelegate)">
            <summary>
            批量标签点属性更改通知订阅  2017.03.28
            </summary>
            <param name="callBack">回调接口</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.CancelSubscribeTags(System.Int32)">
            <summary>
            取消标签点属性更改通知订阅
            </summary>
            <returns>是否取消成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTypesProperties(System.Int32[])">
            <summary>
            根据ids数组获取其对应的标签点类型信息集合
            备注： 该方法返回实体中存在小错误码Error，若小错误码Error==0,则取得的数据正确，如果不为0，则取值出现错误
            </summary>
            <param name="ids">ids数组</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetPointValueTypes(System.Int32[])">
            <summary>
            根据ids获取对应的测点值的类型
            </summary>
            <param name="ids">测点id</param>
            <returns>类型实体集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTagNamesProperties(System.Int32[])">
            <summary>
            根据ids批量获取标签点名称
            </summary>
            <param name="ids">标签点ids</param>
            <returns>标签点id与标签点名称的信息实体</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTagNames(System.Int32[])">
            <summary>
            根据ids查询测点名称
            </summary>
            <param name="ids">测点ids</param>
            <returns>测点名称</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTableTagNamesProperties(System.Int32[])">
            <summary>
            根据ids查询标签点全名称对应的实体集合
            </summary>
            <param name="ids">标签点ids</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTableTagNames(System.Int32[])">
            <summary>
            根据ids查询标签点全名称
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTagpropertiesByIds(System.Int32[],System.Boolean)">
            <summary>
            根据ids获得标签点名称或者全名称
            </summary>
            <param name="ids">标签点ids</param>
            <param name="isTableTagName">是否为标签点全名称 true:表示标签点全名称，false：表示标签点名称</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTagNamesByIds(System.Int32[],System.Boolean)">
            <summary>
            根据ids获得标签点名称或者全名称
            </summary>
            <param name="ids"></param>
            <param name="isTableTagName"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetLocationsProperties(System.Int32[],Golden.DotNetSDK.Model.Base.LocationValue)">
            <summary>
            根据标签点ids获取指定的扩展属性
            </summary>
            <param name="ids">标签点ids数组</param>
            <param name="location">选择第几个扩展属性枚举</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetMses(System.Int32[])">
            <summary>
            根据标签点ids的数组获取标签点的精度
            </summary>
            <param name="ids"></param>
            <returns>精度数组 (0表示秒点，1表示毫秒点)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetCompdevs(System.Int32[])">
            <summary>
            根据标签点ids数组获取标签点是否压缩的属性
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>返回压缩偏差</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetCompmaxs(System.Int32[])">
            <summary>
            根据ids数组获取标签点压缩最长压缩间隔的属性
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>最长压缩间隔属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetCompmins(System.Int32[])">
            <summary>
            根据ids数组获取标签点压缩最短压缩间隔的属性
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>最短压缩间隔属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetExcdevs(System.Int32[])">
            <summary>
            根据ids数组获取例外偏差属性
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>例外偏差属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetExcMaxs(System.Int32[])">
            <summary>
            根据ids数组获取最长例外间隔
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>最长例外间隔属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetExcMins(System.Int32[])">
            <summary>
            根据ids数组获取最短例外间隔
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>最短例外间隔属性</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetClassofs(System.Int32[])">
            <summary>
            根据ids数组获取标签点类别  
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点属性类别 （Classof=0表示基本点；Classof=1表示采集点；Classof=2表示计算点；Classof=3表示采集计算点）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTables(System.Int32[])">
            <summary>
            根据ids数组获取标签点所属表
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点所属表的ids</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetSummarys(System.Int32[])">
            <summary>
            用于设定是否生成标签点统计信息，从而加速历史数据统计过程。
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点加速统计（0表示OFF，1表示ON）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetMirrors(System.Int32[])">
            <summary>
            根据ids获取标签点镜像是否启动
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点镜像属性值 (true:表示镜像开启，false：表示镜像关闭)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetCompress(System.Int32[])">
            <summary>
            根据ids获取标签点压缩属性值（Compress=0表示OFF，Compress=1表示ON）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点压缩属性值(true:表示压缩开启，false:表示压缩关闭)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetSteps(System.Int32[])">
            <summary>
            根据ids获取标签点阶跃属性值
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点阶跃属性值 (true:表示阶跃属性开启，false:表示关闭)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetShutDowns(System.Int32[])">
            <summary>
            根据ids获取标签点停机状态
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点停机状态字 (true:表示出于停机状态；false:表示没有出于停机状态)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetArchives(System.Int32[])">
            <summary>
            根据ids获取标签点数据是否需要存档
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点数据是否存档 (true:表示开启了存档；false表示不需要存档)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetDescs(System.Int32[])">
            <summary>
            根据ids获取标签点文字性描述
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点文字性描述</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetUnits(System.Int32[])">
            <summary>
            根据ids获取工程单位
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>工程单位</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetChangers(System.Int32[])">
            <summary>
            根据ids获取标签点属性最后一次被修改的用户名
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点属性最后一次被修改的用户名</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetCreators(System.Int32[])">
            <summary>
            根据ids获取标签点创建者的用户名
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点创建者的用户名</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetLowLimits(System.Int32[])">
            <summary>
            根据ids获取标签点的量程下限
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>量程下限</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetHighLimits(System.Int32[])">
            <summary>
            根据ids获取标签点的量程上限
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>量程上限</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTypicals(System.Int32[])">
            <summary>
            根据ids获取标签点设置的典型值（大于等于量程下限，小于等于量程上限。）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>典型值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetChangeDates(System.Int32[])">
            <summary>
            根据ids获取标签点最后一次被修改的时间
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点最后一次被修改的时间</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetCreateDates(System.Int32[])">
            <summary>
            根据ids获取标签点被创建的时间
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>标签点被创建的时间</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetDigits(System.Int32[])">
            <summary>
            根据ids获取标签点的数值位数，用来控制数值的显示格式(Digit值处于-20到10之间)
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>数值位数（如果为0或正数，表示数值的小数位数，如果为负数，表示数值的有效位数）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SubscribeTags_callback_Ex(System.UInt32,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            回调函数  2017.03.28
            </summary>
            <param name="enent_type"></param>
            <param name="handle"></param>
            <param name="param"></param>
            <param name="count"></param>
            <param name="ids"></param>
            <param name="what"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SubscribeTagsEx(RTDB.Data.Client.Enum.Golden_Option,System.Object,Golden.DotNetSDK.Model.TagsChangeDelegateEx)">
            <summary>
            标签点属性更改通知订阅-2017.03.28
            </summary>
            <param name="options">API 在连接中断后是否自动重连,0表示重连，1表示不重连，默认为0</param>
            <param name="param">输入，用户参数</param>
            <param name="callback">gob_tags_change_ex 类型回调接口，输入</param>
            <returns>UInt32</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetCompdevPercents(System.Int32[])">
            <summary>
            根据ids获取压缩偏差百分比
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>压缩偏差百分比</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetExcdevPercents(System.Int32[])">
            <summary>
            根据ids获取例外偏差百分比
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>例外偏差百分比</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetSources(System.Int32[])">
            <summary>
            根据ids获取数据源，将标签点同某些接口或某些模块相关联
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>数据源（每个数据源字符串只允许由26个字母（大小写敏感）和数字（0-9）组成，字节长度不要超出255，多余的部分会被截断。）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetIsScans(System.Int32[])">
            <summary>
            根据ids获取标签点是否在采集数据（Scan=0表示OFF，Scan=1表示ON）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>采集属性值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetInstruments(System.Int32[])">
            <summary>
            根据ids获取设备标签（字节长度不要超出49，多余的部分会被截断）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>设备标签</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetUserInts(System.Int32[],Golden.DotNetSDK.Model.Base.UserIntValue)">
            <summary>
            根据ids,自定义整数类型批量获取自定义整数的值（缺省值为0）
            </summary>
            <param name="ids">标签点ids数组</param>
            /// <param name="userint">自定义整数类型枚举值</param>
            <returns>自定义整数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetUserReals(System.Int32[],Golden.DotNetSDK.Model.Base.UserRealValue)">
            <summary>
            根据ids批量获取自定义单精度浮点数（缺省值全部为0）
            </summary>
            <param name="ids">标签点ids数组</param>
            <param name="userreal">自定义浮点数类型枚举值</param>
            <returns>自定义浮点数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetEquations(System.Int32[])">
            <summary>
            根据ids批量获取计算触发方式（计算点）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>方程式（字节长度不要超出2047，长度超长的方程式将被拒绝设置入库，返回一个错误，避免错误的方程式进入系统，引发不安全因素）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTriggers(System.Int32[])">
            <summary>
            根据ids批量获取触发方式（计算点）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>触发方式（用于设置实时方程式服务对单个计算点的计算触发采用"事件触发"还是"周期触发"，对于"周期触发"以"事件触发"作为其先决判断条件，如果"事件触发"不满足，则不进行"周期触发"）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetTimecopys(System.Int32[])">
            <summary>
            根据ids批量获取计算结果时间戳参考
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>时间戳参考（0:表示采用计算时间作为计算结果时间戳；1:表示采用输入标签点中的最晚时间作为计算结果时间戳；2:表示采用输入标签点中的最早时间作为计算结果时间戳）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetPeriods(System.Int32[])">
            <summary>
            根据ids批量获取标签点计算周期（单位：秒）
            </summary>
            <param name="ids">标签点ids数组</param>
            <returns>计算周期（标签点触发方式为周期触发）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.QueryLoadMemory">
            <summary>
            查询标签点属性加载到内存中的当前配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.SetLoadMemory(Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag[])">
            <summary>
            设置标签点属性加载到内存中的当前配置
            </summary>
            <param name="loadMemoryFlag"></param>属性枚举数组 
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.QueryNeedMemorySize(Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag)">
            <summary>
            查询根据配置加载到内存中的标签点属性所占用的内存
            </summary>
            <param name="loadMemoryFlag">加载的测点的枚举</param>
            <returns>需要的内存大小（字节）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.WriteNamedTypeFieldByName(Golden.DotNetSDK.Model.Data.NamedTypeDataModel)">
            <summary>
            将自定义类型的所有字段的值写入byte数组
            </summary>
            <param name="namedTypeData">自定义类型数据实体</param>
            <returns>填充完成的byte数组</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.WriteNamedTypeFieldByName(System.Int32,System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeFieldValue})">
            <summary>
            根据自定义类型字段名称，将自定义类型的所有字段写入byte数组
            </summary>
            <param name="tagId">标签点ID</param>
            <param name="fields">自定义类型的所有字段</param>
            <returns>填充完成的byte数组</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetBytes(Golden.DotNetSDK.Model.Data.NamedTypeFieldValue)">
            <summary>
            将NamedTypeFieldValue中的Value转换成字节数组
            </summary>
            <param name="field"></param>
            <returns>转换完成的字节数组</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetEquationById(System.Int32)">
            <summary>
            根ID径获取方程式
            </summary>
            <param name="id">方程式ID</param>
            <returns>方程式</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetEquationByFileName(System.String)">
            <summary>
            根据路径获取方程式
            </summary>
            <param name="fileName">方程式文件名</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.InsertMaxPoint(Golden.DotNetSDK.Model.Base.FullPoint)">
            <summary>
            创建计算点（方程式所允许的最大属性创建）
            </summary>
            <param name="fullPoint">测点全属性</param>
            <returns>测点id</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetMaxPointsProperty(System.Int32[])">
            <summary>
            按最大长度批量获取标签点属性
            </summary>
            <param name="ids">计算点ids</param>
            <returns>计算点属性集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.GetRecycledMaxPointProperty(Golden.DotNetSDK.Model.Base.FullPoint)">
            <summary>
            按最大长度获取可回收标签点的属性
            </summary>
            <param name="fullPoint">FullPoint</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.BaseImpl.UpdateMaxPointProperty(Golden.DotNetSDK.Model.Base.FullPoint)">
             <summary>
             按最大长度更新单个标签点属性
             </summary>
             <param name="fullPoint">FullPoint</param>
             备注(其中 id、table、type、millisecond 字段不能修改，
            changedate、changer、createdate、creator 字段由系统维护，其余字段均可修改)
             <returns></returns>
        </member>
        <member name="T:Golden.DotNetSDK.Impl.ComputerImpl">
            <summary>
            方程式计算服务
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Inter.IComputer">
            <summary>
            方程式计算服务
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IComputer.ComputeHistory(System.Int32[],Golden.DotNetSDK.Model.Computer.ComputerFlag,System.DateTime,System.DateTime)">
            <summary>
            重算或补算批量计算标签点历史数据(本接口仅对带有计算扩展属性的标签点有效)
            </summary>
            <param name="ids">标签点标识</param>
            <param name="flag">计算方式枚举，重算或者补算</param>
            <param name="beginTime">开始时间，不能为空</param>
            <param name="endTime">结束时间，可空，表示计算直至存档中数据的最后的时间</param>
            <returns>重算或补算的信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ComputerImpl.#ctor(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            构造函数
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ComputerImpl.ComputeHistory(System.Int32[],Golden.DotNetSDK.Model.Computer.ComputerFlag,System.DateTime,System.DateTime)">
            <summary>
            重算或补算批量计算标签点历史数据(本接口仅对带有计算扩展属性的标签点有效)
            </summary>
            <param name="ids">标签点标识</param>
            <param name="flag">计算方式枚举，重算或者补算</param>
            <param name="beginTime">开始时间，不能为空</param>
            <param name="endTime">结束时间，可空，表示计算直至存档中数据的最后的时间</param>
            <returns>重算或补算的信息</returns>
        </member>
        <member name="T:Golden.DotNetSDK.Impl.HistorianImpl">
            <summary>
            历史数据服务
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Inter.IHistorian">
            <summary>
            历史数据服务
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.SetConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            重置链接
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetNumberArchivedValuesCount(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 数字类型 标签点在一段时间范围内的存储值数量
            </summary>
            <param name="id">点的编号</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>存储值的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntArchivedValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 整型 标签点一段时间内的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>整型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatArchivedValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 浮点型 标签点一段时间内的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>浮点型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetCoorArchivedValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 坐标型 标签点一段时间内的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>坐标型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntArchivedValuesBackward(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            逆向读取单个 整型 标签点一段时间内的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>整型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatArchivedValuesBackward(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            逆向读取单个 浮点型 标签点一段时间内的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>浮点型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetCoorArchivedValuesBackward(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            逆向读取单个 坐标型 标签点一段时间内的储存数据(暂时不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>坐标型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetNumberArchivedValuesInBatches(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            分段返回方式读取一段时间内的储存数据,每次返回分段的长度，用于继续调用 GetIntNextArchivedValues 或 GetFloatNextArchivedValues 接口
            </summary>
            <param name="id">点的编号</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>每次返回分段的长度</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntNextArchivedValues(System.Int32,System.Int32)">
            <summary>
            分段读取一段时间内 整型类型 的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="batchCount">不能小于GetNumberArchivedValuesInBatches方法的返回值</param>
            <returns>一段时间内的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatNextArchivedValues(System.Int32,System.Int32)">
            <summary>
            分段读取一段时间内 浮点类型 的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="batchCount">不能小于GetNumberArchivedValuesInBatches方法的返回值</param>
            <returns>一段时间内的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntTimedValues(System.Int32,System.DateTime[])">
            <summary>
            获取单个 整型类型 标签点的单调递增时间序列历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="datetimes">表示需要的单调递增时间列表</param>
            <returns>获取到的历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatTimedValues(System.Int32,System.DateTime[])">
            <summary>
            获取单个 浮点型类型 标签点的单调递增时间序列历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="datetimes">表示需要的单调递增时间列表</param>
            <returns>获取到的历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetCoorTimedValues(System.Int32,System.DateTime[])">
            <summary>
            获取单个 坐标类型 标签点的单调递增时间序列历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="datetimes">表示需要的单调递增时间列表</param>
            <returns>获取到的历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntInterpoValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 整型类型 标签点一段时间内等间隔历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要获取的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>等间隔历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatInterpoValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 浮点类型 标签点一段时间内等间隔历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要获取的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>等间隔历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntIntervalValues(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 整型类型 标签点某个时刻之后一定数量的等间隔内插值替换的历史数值
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要获取的数量</param>
            <param name="interval">插值时间间隔，单位为毫秒</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>插值替换的历史数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatIntervalValues(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 浮点类型 标签点某个时刻之后一定数量的等间隔内插值替换的历史数值
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要获取的数量</param>
            <param name="interval">插值时间间隔，单位为毫秒</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>插值替换的历史数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            读取单个 整型类型 标签点某个时间的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="dateTime">时间</param>
            <param name="mode">历史数据模式</param>
            <returns>历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            读取单个 浮点类型 标签点某个时间的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="dateTime">时间</param>
            <param name="mode">历史数据模式</param>
            <returns>历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetStringSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            读取单个 字符串类型 标签点某个时间的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="dateTime">时间</param>
            <param name="mode">历史数据模式</param>
            <returns>历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetBlobSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            读取单个 二进制类型 标签点某个时间的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="dateTime">时间</param>
            <param name="mode">历史数据模式</param>
            <returns>历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetCoorSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            读取单个 坐标类型 标签点某个时间的历史数据(暂时不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="dateTime">时间</param>
            <param name="mode">历史数据模式</param>
            <returns>历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetNumberSummary(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 数字类型 标签点一段时间内的统计值
            </summary>
            <param name="id">点的编号</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>统计信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetNumberSummaryInBatches(System.Int32,System.Int32,System.Int64,System.DateTime,System.DateTime)">
            <summary>
            分批获取单个 数字类型 标签点一段时间内的统计值
            </summary>
            <param name="id">点的编号</param>
            <param name="count">分批批次数</param>
            <param name="interval">每个批次间间隔时间，单位毫秒</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>统计信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetNumberSummaryEx(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个标签点一段时间内的统计值，以及用于计算统计值的数据个数
            </summary>
            <param name="id">标签点id</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetNumberSummaryFiltEx(System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>
            获取单个标签点一段时间内经复杂条件筛选后的统计值
            </summary>
            <param name="id">标签点id</param>
            <param name="filter">字符串，输入，由算术、逻辑运算符组成的复杂条件表达式，长度不得超过 GOLDEN_EQUATION_SIZE，长度为 0 则不进行条件筛选。</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntPlotValues(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 整型 标签点一段时间内用于绘图的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="interval">时间区间个数</param>
            <param name="count">获取历史数据总数（一般为区间个数5倍）</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>绘图的历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatPlotValues(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 浮点型 标签点一段时间内用于绘图的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="interval">时间区间个数</param>
            <param name="count">获取历史数据总数（一般为区间个数5倍）</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>绘图的历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntCrossSectionValues(System.Int32[],Golden.DotNetSDK.Model.Historian.HistorianMode,System.DateTime)">
            <summary>
            获取批量 整型 标签点在某一时间的历史断面数据
            </summary>
            <param name="ids">点的编号</param>
            <param name="mode">历史数据模式</param>
            <param name="dateTime">时间</param>
            <returns>历史断面数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatCrossSectionValues(System.Int32[],Golden.DotNetSDK.Model.Historian.HistorianMode,System.DateTime)">
            <summary>
            获取批量 浮点型 标签点在某一时间的历史断面数据
            </summary>
            <param name="ids">点的编号</param>
            <param name="mode">历史数据模式</param>
            <param name="dateTime">时间</param>
            <returns>历史断面数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.SubscribePlayback(System.Int32[],System.DateTime,System.DateTime,System.Int32,RTDB.Data.Client.Delegate.GohDataPlayback)">
            <summary>
            订阅一批标签点的历史数据回放(该方法还未完成，因此不能使用)
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.StopPlayback">
            <summary>
            停止历史数据回放(该方法还未完成，因此不能使用)
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntArchivedValuesFilt(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 整型 标签点在一段时间内经复杂条件筛选后的历史储存值
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>筛选后的历史储存值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatArchivedValuesFilt(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 浮点型 标签点在一段时间内经复杂条件筛选后的历史储存值
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>筛选后的历史储存值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntIntervalValuesFilt(System.Int32,System.String,System.Int64,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 整型 标签点某个时刻之后经复杂条件筛选后一定数量的等间隔内插值替换的历史数值(该方法还未完成，因此不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="interval">插值时间间隔，单位为毫秒</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>等间隔内插值替换的历史数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatIntervalValuesFilt(System.Int32,System.String,System.Int64,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 浮点型 标签点某个时刻之后经复杂条件筛选后一定数量的等间隔内插值替换的历史数值(该方法还未完成，因此不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="interval">插值时间间隔，单位为毫秒</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>等间隔内插值替换的历史数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetIntInterpoValuesFilt(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 整型 标签点一段时间内经复杂条件筛选后的等间隔插值(该方法还未完成，因此不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>经复杂条件筛选后的等间隔插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatInterpoValuesFilt(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 浮点型 标签点一段时间内经复杂条件筛选后的等间隔插值(该方法还未完成，因此不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>经复杂条件筛选后的等间隔插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetNumberSummaryFilt(System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>
            获取单个 数字类型 标签点一段时间内经复杂条件筛选后的统计值
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>经复杂条件筛选后的统计值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetNumberSummaryFiltInBatches(System.Int32,System.String,System.Int32,System.Int64,System.DateTime,System.DateTime)">
            <summary>
            分批获取单个 数字类型 标签点一段时间内经复杂条件筛选后的统计值
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="count">想要读取的数据个数</param>
            <param name="interval">分段时间间隔，单位为毫秒</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>经复杂条件筛选后的统计值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.UpdateIntValue(Golden.DotNetSDK.Model.Data.IntData)">
            <summary>
            修改单个 整型 标签点某一时间的历史存储值
            </summary>
            <param name="entity">数据实体</param>
            <returns>修改是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.UpdateFloatValue(Golden.DotNetSDK.Model.Data.FloatData)">
            <summary>
            修改单个 浮点型 标签点某一时间的历史存储值
            </summary>
            <param name="entity">数据实体</param>
            <returns>修改是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.UpdateCoorValue(Golden.DotNetSDK.Model.Data.CoorData)">
            <summary>
            修改单个 坐标类型 标签点某一时间的历史存储值(该方法还未完成，因此不能使用)
            </summary>
            <param name="entity">数据实体</param>
            <returns>修改是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.RemoveValue(System.Int32,System.DateTime)">
            <summary>
            删除单个标签点某个时间的历史存储值
            </summary>
            <param name="id">点的编号</param>
            <param name="datetime">时间</param>
            <returns>删除是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.RemoveValues(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            删除单个标签点一段时间内的历史存储值
            </summary>
            <param name="id">点的编号</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>删除是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutIntSingleValue(Golden.DotNetSDK.Model.Data.IntData)">
            <summary>
            写入单个 整型 标签点在某一时间的历史数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutFloatSingleValue(Golden.DotNetSDK.Model.Data.FloatData)">
            <summary>
            写入单个 浮点型 标签点在某一时间的历史数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutCoorSingleValue(Golden.DotNetSDK.Model.Data.CoorData)">
            <summary>
            写入单个 坐标类型 标签点在某一时间的坐标型历史数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutStringSingleValue(Golden.DotNetSDK.Model.Data.StringData)">
            <summary>
            写入单个 字符串类型 标签点在某一时间的坐标型历史数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutBlobSingleValue(Golden.DotNetSDK.Model.Data.BlobData)">
            <summary>
            写入单个 二进制类型 标签点在某一时间的坐标型历史数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutIntArchivedValues(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.IntData})">
            <summary>
            写入批量 整型 标签点批量历史存储数据
            </summary>
            <param name="entitys">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutFloatArchivedValues(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.FloatData})">
            <summary>
            写入批量 浮点型 标签点批量历史存储数据
            </summary>
            <param name="entitys">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutCoorArchivedValues(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.CoorData})">
            <summary>
            写入批量 坐标类型 标签点批量历史存储数据
            </summary>
            <param name="entitys">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutBlobArchivedValues(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.BlobData})">
            <summary>
            批量写入blob类型的历史
            </summary>
            <param name="entitys">blob历史数据集合</param>
            <returns>写入成功的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutStringArchivedValues(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.StringData})">
            <summary>
            批量写入string类型的历史
            </summary>
            <param name="entitys">string历史数据集合</param>
            <returns>写入成功的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutDateTimeArchivedValues(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData}@)">
            <summary>
            批量写入datetime类型的历史数据
            </summary>
            <param name="entitys">datetime类型的数据集合</param>
            <param name="errorList">返回写入错误的数据信息集合</param>
            <returns>返回写入成功的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.FlushArchivedValues(System.Int32)">
            <summary>
            将标签点未写满的补历史缓存页写入存档文件中。
            </summary>
            <param name="id">整型，输入，标签点标识。</param>
            <returns>返回存档个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetStringArchiveValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获得字符串类型标签点在某一时段的历史数据
            </summary>
            <param name="id">标签点id</param>
            <param name="count">需要获得的历史数据的条数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>单个标签点在某段时间内的历史数据集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetBlobArchiveValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获得二进制类型标签点在某一时段的历史数据
            </summary>
            <param name="id">标签点id</param>
            <param name="count">需要获得的历史数据的条数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>单个标签点在某段时间内的历史数据集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetDateTimeSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            获取datetime类型的单个测点在某一时刻的历史数据
            </summary>
            <param name="id">测点id</param>
            <param name="time">时刻</param>
            <param name="mode">历史数据模式</param>
            <returns>返回DateTimeData实体（其中DateTimeData实体中Time属性已经包含了毫秒）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetArchivedDateTimeValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获得datetime类型标签点在某一时段的历史数据
            </summary>
            <param name="id">测点id</param>
            <param name="count">获取的条数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回DateTimeData实体集合（其中DateTimeData实体中Time属性已经包含了毫秒）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutDatetimeSingleValues(Golden.DotNetSDK.Model.Data.DateTimeData)">
            <summary>
            写入单个datetime标签点在某一时间的历史记录
            </summary>
            <param name="entity">golden_datetime标签实体</param>
            <returns>数据写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetSingleNamedTypeValue(System.Int32,Golden.DotNetSDK.Model.Historian.HistorianMode,System.DateTime)">
            <summary>
            读取单个自定义类型标签点某个时间的历史数据
            </summary>
            <param name="id">标签点id</param>
            <param name="mode">历史数据模式</param>
            <param name="datetime">时间</param>
            <returns>历史数据值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetArchivedNamedTypeValue(System.Int32,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            连续读取自定义类型标签点的历史数据
            </summary>
            <param name="id">标签点id</param>
            <param name="startTime">整型，输入，表示开始时间秒数；</param>
            <param name="endTime">整型，输入,表示结束时间秒数；</param>
            <param name="count">整型，输入表示想要查询多少数据；</param>
            <returns>历史数据值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutSingleNamedTypeValue(Golden.DotNetSDK.Model.Data.NamedTypeDataModel)">
            <summary>
            写入自定义类型标签点的单个历史事件
            </summary>
            <param name="entity">自定义类型数据实体（Value属性为list数组）</param>
            <returns>数据写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutSingleNamedTypeByteValue(Golden.DotNetSDK.Model.Data.NamedTypeDataByte)">
            <summary>
            写入自定义类型标签点的单个历史事件
            </summary>
            <param name="namedTypeDatas">自定义类型数据实体（实体Value属性为Byte数组）</param>
            <returns>数据写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutArchivedNamedTypeValue(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataModel},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataModel}@)">
            <summary>
            批量补写自定义类型标签点的历史事件
            </summary>
            <param name="entities">自定义类型实体集合（Value属性为list数组）</param>
            <param name="errorList">未写入成功的实体集合</param>
            <returns>数据写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutArchivedNamedTypeValueByte(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataByte},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataByte}@)">
            <summary>
            批量补写自定义类型标签点的历史事件
            </summary>
            <param name="entities">自定义类型实体集合（Value属性为byte数组）</param>
            <param name="errorList">未写入成功的实体集合</param>
            <returns>数据写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutIntArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.IntData})">
            <summary>
            批量写入int类型的历史数据
            </summary>
            <param name="data">int类型的历史数据集合</param>
            <returns>成功的条数及错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutFloatArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.FloatData})">
            <summary>
            批量写入float类型的历史数据
            </summary>
            <param name="data">float类型的历史数据集合</param>
            <returns>成功的条数及错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutCoorArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.CoorData})">
            <summary>
            批量写入坐标类型的历史数据
            </summary>
            <param name="data">坐标类型的历史数据集合</param>
            <returns>成功的条数及错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutBlobArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.BlobData})">
            <summary>
            批量写入blob类型的历史数据
            </summary>
            <param name="data">blob类型的历史数据</param>
            <returns>成功的条数及错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutStringArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.StringData})">
            <summary>
            批量写入string类型的历史数据
            </summary>
            <param name="data">历史数据的集合</param>
            <returns>成功的条数及错误的数据 </returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.PutDateTimeArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData})">
            <summary>
            批量写入datetime类型的历史数据
            </summary>
            <param name="data">datetime类型的历史数据集合</param>
            <returns>成功的条数及错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IHistorian.GetFloatInterpoValuesDouble(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 浮点类型 标签点一段时间内等间隔历史插值
            </summary>
            <param name="id">标签点Id</param>
            <param name="count">需要获取的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>等间隔历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.#ctor(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            传入连接，实例化历史服务
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.SetConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            重置链接
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetErrorMessage(System.UInt32)">
            <summary>
            Gets the error message.
            </summary>
            <param name="_result">The _result.</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetNumberArchivedValuesCount(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 数字类型 标签点在一段时间范围内的存储值数量
            </summary>
            <param name="id">点的编号</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>存储值的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntArchivedValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 整型 标签点一段时间内的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>整型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatArchivedValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 浮点型 标签点一段时间内的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>浮点型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetCoorArchivedValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 坐标型 标签点一段时间内的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>坐标型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntArchivedValuesBackward(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            逆向读取单个 整型 标签点一段时间内的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>整型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatArchivedValuesBackward(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            逆向读取单个 浮点型 标签点一段时间内的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>浮点型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetCoorArchivedValuesBackward(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            逆向读取单个 坐标型 标签点一段时间内的储存数据(暂时不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要取得的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>坐标型 的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetNumberArchivedValuesInBatches(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            分段返回方式读取一段时间内的储存数据,每次返回分段的长度，用于继续调用 GetIntNextArchivedValues 或 GetFloatNextArchivedValues 接口
            </summary>
            <param name="id">点的编号</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>每次返回分段的长度</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntNextArchivedValues(System.Int32,System.Int32)">
            <summary>
            分段读取一段时间内 整型类型 的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="batchCount">不能小于GetNumberArchivedValuesInBatches方法的返回值</param>
            <returns>一段时间内的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatNextArchivedValues(System.Int32,System.Int32)">
            <summary>
            分段读取一段时间内 浮点类型 的储存数据
            </summary>
            <param name="id">点的编号</param>
            <param name="batchCount">不能小于GetNumberArchivedValuesInBatches方法的返回值</param>
            <returns>一段时间内的储存数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntTimedValues(System.Int32,System.DateTime[])">
            <summary>
            获取单个 整型类型 标签点的单调递增时间序列历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="datetimes">表示需要的单调递增时间列表</param>
            <returns>获取到的历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatTimedValues(System.Int32,System.DateTime[])">
            <summary>
            获取单个 浮点型类型 标签点的单调递增时间序列历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="datetimes">表示需要的单调递增时间列表</param>
            <returns>获取到的历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetCoorTimedValues(System.Int32,System.DateTime[])">
            <summary>
            获取单个 坐标类型 标签点的单调递增时间序列历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="datetimes">表示需要的单调递增时间列表</param>
            <returns>获取到的历史插值</returns>mn                                                                                                                                                                                          
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntInterpoValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 整型类型 标签点一段时间内等间隔历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要获取的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>等间隔历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatInterpoValuesDouble(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 浮点类型 标签点一段时间内等间隔历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要获取的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>等间隔历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatInterpoValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 浮点类型 标签点一段时间内等间隔历史插值
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要获取的数量</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>等间隔历史插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntIntervalValues(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 整型类型 标签点某个时刻之后一定数量的等间隔内插值替换的历史数值(如果该短时间内没有值，则返回实例化后的空集合)
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要获取的数量</param>
            <param name="interval">插值时间间隔，单位为毫秒</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>插值替换的历史数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatIntervalValues(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 浮点类型 标签点某个时刻之后一定数量的等间隔内插值替换的历史数值(如果该短时间内没有值，则返回实例化后的空集合)
            </summary>
            <param name="id">点的编号</param>
            <param name="count">需要获取的数量</param>
            <param name="interval">插值时间间隔，单位为毫秒</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>插值替换的历史数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            读取单个 整型类型 标签点某个时间的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="dateTime">时间</param>
            <param name="mode">历史数据模式</param>
            <returns>历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            读取单个 浮点类型 标签点某个时间的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="dateTime">时间</param>
            <param name="mode">历史数据模式</param>
            <returns>历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetStringSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            读取单个 字符串类型 标签点某个时间的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="dateTime">时间</param>
            <param name="mode">历史数据模式</param>
            <returns>历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetBlobSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            读取单个 二进制类型 标签点某个时间的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="dateTime">时间</param>
            <param name="mode">历史数据模式</param>
            <returns>历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetCoorSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            读取单个 坐标类型 标签点某个时间的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="dateTime">时间</param>
            <param name="mode">历史数据模式</param>
            <returns>历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetNumberSummary(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 数字类型 标签点一段时间内的统计值
            </summary>
            <param name="id">点的编号</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>统计信息（如果该范围内没有值，则返回null;若返回的最大值最小值无效，则Summary 中开始时间和结束时间返回的为 0001/01/01 00:00:00.000）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetNumberSummaryEx(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个标签点一段时间内的统计值，以及用于计算统计值的数据个数
            </summary>
            <param name="id">标签点id</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetNumberSummaryFiltEx(System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>
            获取单个标签点一段时间内经复杂条件筛选后的统计值
            </summary>
            <param name="id">标签点id</param>
            <param name="filter">字符串，输入，由算术、逻辑运算符组成的复杂条件表达式，长度不得超过 GOLDEN_EQUATION_SIZE，长度为 0 则不进行条件筛选。</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetNumberSummaryInBatches(System.Int32,System.Int32,System.Int64,System.DateTime,System.DateTime)">
            <summary>
            分批获取单个 数字类型 标签点一段时间内的统计值
            </summary>
            <param name="id">点的编号</param>
            <param name="count">分批批次数</param>
            <param name="interval">每个批次间间隔时间，单位毫秒</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>统计信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntPlotValues(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 整型 标签点一段时间内用于绘图的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="interval">时间区间个数</param>
            <param name="count">获取历史数据总数（一般为区间个数5倍）</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>绘图的历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatPlotValues(System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 浮点型 标签点一段 时间内用于绘图的历史数据
            </summary>
            <param name="id">点的编号</param>
            <param name="interval">时间区间个数</param>
            <param name="count">获取历史数据总数（一般为区间个数5倍）</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>绘图的历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntCrossSectionValues(System.Int32[],Golden.DotNetSDK.Model.Historian.HistorianMode,System.DateTime)">
            <summary>
            获取批量 整型 标签点在某一时间的历史断面数据(如果测点在该时间戳没有值，则小错误码会提示找不到数据)
            </summary>
            <param name="ids">点的编号</param>
            <param name="mode">历史数据模式</param>
            <param name="dateTimes">时间</param>
            <returns>历史断面数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatCrossSectionValues(System.Int32[],Golden.DotNetSDK.Model.Historian.HistorianMode,System.DateTime)">
            <summary>
            获取批量 浮点型 标签点在某一时间的历史断面数据
            </summary>
            <param name="ids">点的编号</param>
            <param name="mode">历史数据模式</param>
            <param name="dateTimes">时间</param>
            <returns>历史断面数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.SubscribePlayback(System.Int32[],System.DateTime,System.DateTime,System.Int32,RTDB.Data.Client.Delegate.GohDataPlayback)">
            <summary>
            订阅一批标签点的历史数据回放(该方法还未完成，因此不能使用)
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.StopPlayback">
            <summary>
            停止历史数据回放(该方法还未完成，因此不能使用)
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntArchivedValuesFilt(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 整型 标签点在一段时间内经复杂条件筛选后的历史储存值
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>筛选后的历史储存值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatArchivedValuesFilt(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 浮点型 标签点在一段时间内经复杂条件筛选后的历史储存值
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>筛选后的历史储存值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntIntervalValuesFilt(System.Int32,System.String,System.Int64,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 整型 标签点某个时刻之后经复杂条件筛选后一定数量的等间隔内插值替换的历史数值(该方法还未完成，因此不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="interval">插值时间间隔，单位为毫秒</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>等间隔内插值替换的历史数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatIntervalValuesFilt(System.Int32,System.String,System.Int64,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            读取单个 浮点型 标签点某个时刻之后经复杂条件筛选后一定数量的等间隔内插值替换的历史数值(该方法还未完成，因此不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="interval">插值时间间隔，单位为毫秒</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>等间隔内插值替换的历史数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetIntInterpoValuesFilt(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个 整型 标签点一段时间内经复杂条件筛选后的等间隔插值(该方法还未完成，因此不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>经复杂条件筛选后的等间隔插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetFloatInterpoValuesFilt(System.Int32,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个浮点型 标签点一段时间内经复杂条件筛选后的等间隔插值(该方法还未完成，因此不能使用)
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="count">想要读取的数据个数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>经复杂条件筛选后的等间隔插值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetNumberSummaryFilt(System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>
            获取单个 数字类型 标签点一段时间内经复杂条件筛选后的统计值
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>经复杂条件筛选后的统计值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetNumberSummaryFiltInBatches(System.Int32,System.String,System.Int32,System.Int64,System.DateTime,System.DateTime)">
            <summary>
            分批获取单个 数字类型 标签点一段时间内经复杂条件筛选后的统计值
            </summary>
            <param name="id">点的编号</param>
            <param name="filter">过滤条件</param>
            <param name="count">想要读取的数据个数</param>
            <param name="interval">分段时间间隔，单位为毫秒</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>经复杂条件筛选后的统计值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.UpdateIntValue(Golden.DotNetSDK.Model.Data.IntData)">
            <summary>
            修改单个 整型 标签点某一时间的历史存储值
            </summary>
            <param name="entity">数据实体</param>
            <returns>修改是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.UpdateFloatValue(Golden.DotNetSDK.Model.Data.FloatData)">
            <summary>
            修改单个 浮点型 标签点某一时间的历史存储值
            </summary>
            <param name="entity">数据实体</param>
            <returns>修改是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.UpdateCoorValue(Golden.DotNetSDK.Model.Data.CoorData)">
            <summary>
            修改单个 坐标类型 标签点某一时间的历史存储值
            </summary>
            <param name="entity">数据实体</param>
            <returns>修改是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.RemoveValue(System.Int32,System.DateTime)">
            <summary>
            删除单个标签点某个时间的历史存储值
            </summary>
            <param name="id">点的编号</param>
            <param name="datetime">时间</param>
            <returns>删除是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.RemoveValues(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            删除单个标签点一段时间内的历史存储值
            </summary>
            <param name="id">点的编号</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>删除是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutIntSingleValue(Golden.DotNetSDK.Model.Data.IntData)">
            <summary>
            写入单个 整型 标签点在某一时间的历史数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutFloatSingleValue(Golden.DotNetSDK.Model.Data.FloatData)">
            <summary>
            写入单个 浮点型 标签点在某一时间的历史数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutCoorSingleValue(Golden.DotNetSDK.Model.Data.CoorData)">
            <summary>
            写入单个 坐标类型 标签点在某一时间的坐标型历史数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutStringSingleValue(Golden.DotNetSDK.Model.Data.StringData)">
            <summary>
            写入单个 字符串类型 标签点在某一时间的坐标型历史数据(该方法还未完成，因此不能使用)
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutBlobSingleValue(Golden.DotNetSDK.Model.Data.BlobData)">
            <summary>
            写入单个 二进制类型 标签点在某一时间的坐标型历史数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <!-- 对于成员“M:Golden.DotNetSDK.Impl.HistorianImpl.PutIntArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.IntData})”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Golden.DotNetSDK.Impl.HistorianImpl.PutFloatArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.FloatData})”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Golden.DotNetSDK.Impl.HistorianImpl.PutCoorArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.CoorData})”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Golden.DotNetSDK.Impl.HistorianImpl.PutBlobArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.BlobData})”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Golden.DotNetSDK.Impl.HistorianImpl.PutStringArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.StringData})”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Golden.DotNetSDK.Impl.HistorianImpl.PutDateTimeArchivedCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData})”忽略有格式错误的 XML 注释 -->
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.FlushArchivedValues(System.Int32)">
            <summary>
            将标签点未写满的补历史缓存页写入存档文件中。
            </summary>
            <param name="id">整型，输入，标签点标识。</param>
            <returns>返回存档个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetStringArchiveValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个字符串类型标签点在某一段时间内的历史值
            </summary>
            <param name="id">标签点标识</param>
            <param name="count">需要获得的历史值的条数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetBlobArchiveValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获取单个二进制类型标签点在某一段时间内的历史值
            </summary>
            <param name="id">标签点id</param>
            <param name="count">需要获取的条数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetDateTimeSingleValue(System.Int32,System.DateTime,Golden.DotNetSDK.Model.Historian.HistorianMode)">
            <summary>
            获取datetime类型的单个测点在某一时刻的历史数据
            </summary>
            <param name="id">测点id</param>
            <param name="time">时刻</param>
            <param name="mode">历史数据模式</param>
            <returns>返回DateTimeData实体（其中DateTimeData实体中Time属性已经包含了毫秒）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetArchivedDateTimeValues(System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获得datetime类型标签点在某一时段的历史数据
            </summary>
            <param name="id">测点id</param>
            <param name="count">获取的条数</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回DateTimeData实体集合（其中DateTimeData实体中Time属性已经包含了毫秒）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutDatetimeSingleValues(Golden.DotNetSDK.Model.Data.DateTimeData)">
            <summary>
            写入单个datetime标签点在某一时间的历史记录
            </summary>
            <param name="entity">golden_datetime标签实体</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetSingleNamedTypeValue(System.Int32,Golden.DotNetSDK.Model.Historian.HistorianMode,System.DateTime)">
            <summary>
            读取单个自定义类型标签点某个时间的历史数据   value返回来的内容需要考虑
            </summary>
            <param name="id">标签点id</param>
            <param name="mode">历史数据模式</param>
            <param name="dt">时间</param>
            <returns>自定义类型标签点某个时间的历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.GetArchivedNamedTypeValue(System.Int32,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            连续读取自定义类型标签点的历史数据
            </summary>
            <param name="id">监测点id</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="count">整型，输入/输出，输入表示想要查询多少数据，输出表示实际查到多少数据</param>
            <returns>自定义类型标签点的历史数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutSingleNamedTypeValue(Golden.DotNetSDK.Model.Data.NamedTypeDataModel)">
            <summary>
            写入自定义类型标签点的单个历史事件
            </summary>
            <param name="entity">自定义类型数据实体(value为list)</param>
            <returns>数据写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutSingleNamedTypeByteValue(Golden.DotNetSDK.Model.Data.NamedTypeDataByte)">
            <summary>
            写入自定义类型标签点的单个历史事件
            </summary>
            <param name="entity">自定义类型数据实体（value为byte)</param>
            <returns>数据写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutArchivedNamedTypeValue(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataModel},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataModel}@)">
            <summary>
            批量补写自定义类型标签点的历史事件
            </summary>
            <param name="entities">自定义类型数据实体集合(value为list)</param>
            <param name="errorList">未写入到数据库中的实体的集合</param>
            <returns>数据写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutArchivedNamedTypeValueByte(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataByte},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataByte}@)">
            <summary>
            批量补写自定义类型标签点的历史事件
            </summary>
            <param name="entities">自定义类型数据实体集合(value为byte)</param>
            <param name="errorList">未写入到数据库中的实体的集合</param>
            <returns>数据写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutIntArchivedValues(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.IntData})">
            <summary>
            写入批量 整型 标签点批量历史存储数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutFloatArchivedValues(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.FloatData})">
            <summary>
            写入批量 浮点型 标签点批量历史存储数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutCoorArchivedValues(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.CoorData})">
            <summary>
            写入批量 坐标类型 标签点批量历史存储数据
            </summary>
            <param name="entity">数据实体</param>
            <returns>写入是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutBlobArchivedValues(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.BlobData})">
            <summary>
            批量写入blob类型的历史
            </summary>
            <param name="entitys">blob历史数据集合</param>
            <returns>写入成功的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutStringArchivedValues(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.StringData})">
            <summary>
            批量写入string类型的历史
            </summary>
            <param name="entitys">string历史数据集合</param>
            <returns>写入成功的数量</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.HistorianImpl.PutDateTimeArchivedValues(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData}@)">
            <summary>
            批量写入datetime类型的历史数据
            </summary>
            <param name="entitys">datetime类型的数据集合</param>
            <param name="errorList">返回写入错误的数据信息集合</param>
            <returns>返回写入成功的条数</returns>
        </member>
        <member name="T:Golden.DotNetSDK.Impl.ServerImpl">
            <summary>
            网络通信服务
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Inter.IServer">
            <summary>
            网络通信服务
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.SetConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            重置链接
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.Connect(System.String,System.Int32)">
            <summary>
            连接
            </summary>
            <param name="hostname">ip地址</param>
            <param name="port">端口</param>
            <returns>链接句柄</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.Login(System.String,System.Int32,System.String,System.String)">
            <summary>
            登陆
            </summary>
            <param name="hostname">ip地址</param>
            <param name="port">端口</param>
            <param name="user">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.Disconnect(System.String,System.Int32)">
            <summary>
            断开连接
            </summary>
            <param name="hostname">ip地址</param>
            <param name="port">端口</param>
            <returns>是否断开成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetConnectionCount">
            <summary>
            返回数据库服务器当前连接个数
            </summary>
            <returns>数据库服务器当前连接个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetConnections(System.Int32)">
            <summary>
            列出数据库服务器的所有连接句柄
            </summary>
            <param name="count">表示需要的连接个数</param>
            <returns>所有连接句柄</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetConnectionInfo(System.Int32)">
            <summary>
            返回数据库服务器指定连接的信息
            </summary>
            <param name="socket">指定的连接</param>
            <returns>指定连接的信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetConnectInfos">
            <summary>
            返回数据库服务器所有连接的信息
            </summary>
            <returns>所有连接的信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.ChangePassword(System.String,System.String)">
            <summary>
            修改用户密码
            </summary>
            <param name="user">用户名称</param>
            <param name="password">密码</param>
            <returns>修改用户密码是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.ChangeMyPassword(System.String,System.String)">
            <summary>
            用户修改自己帐户口令
            </summary>
            <param name="oldPassword">帐户原口令</param>
            <param name="newPassword">帐户新口令</param>
            <returns>用户修改自己帐户口令是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.ChangePriv(System.String,Golden.DotNetSDK.Model.Server.PrivGroup)">
            <summary>
            修改用户帐户权限
            </summary>
            <param name="user">已有帐户</param>
            <param name="priv">帐户权限</param>
            <returns>修改用户帐户权限是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.AddUser(System.String,System.String,Golden.DotNetSDK.Model.Server.PrivGroup)">
            <summary>
            添加用户帐户
            </summary>
            <param name="user">帐户</param>
            <param name="password">帐户初始口令</param>
            <param name="priv">帐户权限</param>
            <returns>添加用户是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.RemoveUser(System.String)">
            <summary>
            删除用户帐户
            </summary>
            <param name="user">帐户</param>
            <returns>删除用户帐户是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetUsers(System.Int32)">
            <summary>
            获得用户信息
            </summary>
            <param name="count">需要获取的用户个数</param>
            <returns>用户数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.AddAuthorization(System.String,System.String,Golden.DotNetSDK.Model.Server.PrivGroup,System.String)">
            <summary>
            添加信任连接段
            </summary>
            <param name="addr">信任连接段地址</param>
            <param name="mask">信任连接段子网掩码</param>
            <param name="priv">信任连接段拥有的用户权限</param>
            <param name="desc">信任连接段的说明，超过 511 字符将被截断</param>
            <returns>添加信任连接段是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.RemoveAuthorization(System.String,System.String)">
            <summary>
            删除信任连接段
            </summary>
            <param name="addr">信任连接段地址</param>
            <param name="mask">信任连接段子网掩码</param>
            <returns>删除信任连接段是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetAuthorizations(System.Int32)">
            <summary>
            获得信任连接段
            </summary>
            <param name="count">用户需要获得的信任连接段个数</param>
            <returns>信任连接信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetHostTime">
            <summary>
            获取数据库服务器当前时间
            </summary>
            <returns>数据库服务器当前时间</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.FormatMessage(System.UInt32)">
            <summary>
            获取 API 调用返回值的简短描述
            </summary>
            <param name="ecode">返回码</param>
            <returns>返回码的简短描述</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetJobMessage(System.Int32)">
            <summary>
            获取任务的简短描述
            </summary>
            <param name="jobId">任务ID</param>
            <returns>任务描述信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.KillConnection(System.Int32)">
            <summary>
            断开已知连接
            </summary>
            <param name="socket">要断开的连接</param>
            <returns>断开连接是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetDbInfo1(Golden.DotNetSDK.Model.Server.DBParamIndex,System.Int32)">
            <summary>
            获得字符串型数据库系统参数
            </summary>
            <param name="index">要取得的参数索引</param>
            <param name="size">字符串缓冲区尺寸</param>
            <returns>存放取得的字符串参数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetDbInfo2(Golden.DotNetSDK.Model.Server.DBParamIndex)">
            <summary>
            获得整型数据库系统参数
            </summary>
            <param name="index">要取得的参数索引</param>
            <returns>存放取得的整型参数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.SetDbInfo1(Golden.DotNetSDK.Model.Server.DBParamIndex,System.String)">
            <summary>
            设置字符串型数据库系统参数
            </summary>
            <param name="index">要设置的参数索引</param>
            <param name="str">要设置的字符串</param>
            <returns>设置字符串型数据库系统参数是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.SetDbInfo2(Golden.DotNetSDK.Model.Server.DBParamIndex,System.Int32)">
            <summary>
            设置整型数据库系统参数
            </summary>
            <param name="index">要设置的参数索引</param>
            <param name="value">要设置的整型数值</param>
            <returns>设置整型数据库系统参数是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetLogicalDrivers">
            <summary>
            获得逻辑盘符(备注：drivers 的内存空间由用户负责维护，长度应不小于 32)
            </summary>
            <returns>返回逻辑盘符组成的字符串，每个盘符占一个字符</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.OpenPath(System.String)">
            <summary>
            打开目录以便遍历其中的文件和子目录
            </summary>
            <param name="dir">要打开的目录</param>
            <returns>打开目录是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.ReadPath">
            <summary>
            读取目录中的文件或子目录
            </summary>
            <returns>读取的目录或子文件信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.ClosePath">
            <summary>
             关闭当前遍历的目录
            </summary>
            <returns>关闭当前遍历的目录是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.MkDir(System.String)">
            <summary>
            建立目录
            </summary>
            <param name="dir">新建目录的全路径</param>
            <returns>建立目录是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetFileSize(System.String)">
            <summary>
            获得指定服务器端文件的大小
            </summary>
            <param name="file">文件名</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.ReadFile(System.String,System.Int32,System.Int32)">
            <summary>
            读取服务器端指定文件的内容
            </summary>
            <param name="file">要读取内容的文件名</param>
            <param name="pos">读取文件的起始位置</param>
            <param name="size">要读取文件内容的字节大小</param>
            <returns>文件内容</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.AddBlacklist(Golden.DotNetSDK.Model.Server.BlackListInfo)">
            <summary>
            添加连接黑名单
            </summary>
            <param name="black">连接黑名单实体</param>
            <returns>是否添加成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.UpdateBlacklist(System.String,System.String,Golden.DotNetSDK.Model.Server.BlackListInfo)">
            <summary>
            修改连接黑名单
            </summary>
            <param name="oldAddr">原网络连接地址</param>
            <param name="oldMask">原连接子网虚码</param>
            <param name="black">新黑名单实体</param>
            <returns>是否修改成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.RemoveBlacklist(System.String,System.String)">
            <summary>
            删除链接黑名单
            </summary>
            <param name="addr">连接地址</param>
            <param name="mask">连接子网虚码</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetBlacklists(System.Int32)">
            <summary>
            获得黑名单列表
            </summary>
            <param name="count">获得的个数</param>
            <returns>实际获得的黑名单列表及个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.UpdateAuthorization(System.String,System.String,Golden.DotNetSDK.Model.Server.AuthorizationInfo)">
            <summary>
            更新信任连接段
            </summary>
            <param name="oldAddr">原连接段地址</param>
            <param name="oldMask">原连接段子网掩码</param>
            <param name="authoriza">新的信任连接详细信息实体</param>
            <returns>是否更新成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetPriv">
            <summary>
            获得当前连接用户的权限
            备注：如果还未登陆或不在服务器信任连接中，对应权限为-1，表示没有任何权限。
            </summary>
            <returns>权限(详情参见PrivGroup枚举)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.GetMaxBlobLen">
            <summary>
            取得数据库允许的blob、str类型测点的最大长度
            </summary>
            <returns>返回最大长度</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.ReConnection(Golden.DotNetSDK.Model.Server.IsReConnection)">
            <summary>
            是否重连,
            </summary>
            <param name="option">是否重连</param>
            备注：选项设置后在下一次调用 api 时才生效。
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.FormatQuality(System.UInt16[])">
            <summary>
            取得质量码对应的定义
            </summary>
            <param name="qualities">质量码</param>
            <returns>质量码所对应的含义的实体</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.NamedTypeNameFieldCheck(System.String)">
            <summary>
            检查自定义类型名称及字段命名是否符合规则；
            规则：1. 只允许使用26个英文字母,数字0-9，下划线；
                 2. 必须以字母作为首字母；
                 3. 大小写不敏感。
            </summary>
            <param name="fieldName">需要检查的名称</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.WriteNamedTypeFieldByName(Golden.DotNetSDK.Model.Data.NamedTypeDataModel)">
            <summary>
            将自定义类型的所有字段的值写入byte数组
            </summary>
            <param name="namedTypeData">自定义类型数据实体</param>
            <returns>填充完成的byte数组</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.WriteNamedTypeFieldByName(Golden.DotNetSDK.Model.Data.NamedTypeDataModel,Golden.DotNetSDK.Inter.IBase)">
            <summary>
            将自定义类型的所有字段的值写入byte数组
            </summary>
            <param name="namedTypeData">自定义类型数据实体</param>
            <param name="iBase">执行转换的IBase实体</param>
            <returns>填充完成的</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.ReadNamedTypeFieldByName(System.Int32,System.Byte[])">
            <summary>
            将byte数组中的数据取出来，转换成自定义类型的所有字段
            </summary>
            <param name="tagId">标签点ID</param>
            <param name="bytes">字节数组</param>
            <returns>提取完成的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.ReadNamedTypeFieldByName(System.Int32,System.Byte[],Golden.DotNetSDK.Inter.IBase)">
            <summary>
            将byte数组中的数据取出来，转换成自定义类型的所有字段
            </summary>
            <param name="tagId">标签点ID</param>
            <param name="bytes">字节数组</param>
            <param name="ibase">执行转换的IBase实体</param>
            <returns>提取完成的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.IServer.JudgeConnectStatus(System.Int32)">
            <summary>
            判断连接是否可用
            </summary>
            <param name="handle">连接句柄</param>
            <returns>是否可用 true：表示连接可用；false：表示连接不可用</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.#ctor(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            构造函数
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.SetConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            重置链接
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.Connect(System.String,System.Int32)">
            <summary>
            连接
            </summary>
            <param name="hostname">ip地址</param>
            <param name="port">端口</param>
            <returns>链接句柄</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.Login(System.String,System.Int32,System.String,System.String)">
            <summary>
            登陆
            </summary>
            <param name="hostname">ip地址</param>
            <param name="port">端口</param>
            <param name="user">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.Disconnect(System.String,System.Int32)">
            <summary>
            断开连接
            </summary>
            <returns>是否断开成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetConnectionCount">
            <summary>
            返回数据库服务器当前连接个数
            </summary>
            <returns>数据库服务器当前连接个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetConnections(System.Int32)">
            <summary>
            列出数据库服务器的所有连接句柄
            </summary>
            <param name="count">表示需要的连接个数</param>
            <returns>所有连接句柄</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetConnectionInfo(System.Int32)">
            <summary>
            返回数据库服务器指定连接的信息
            </summary>
            <param name="socket">指定的连接</param>
            <returns>指定连接的信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetConnectInfos">
            <summary>
            返回数据库服务器所有连接的信息
            </summary>
            <returns>所有连接的信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.ChangePassword(System.String,System.String)">
            <summary>
            修改用户密码
            </summary>
            <param name="user">用户名称</param>
            <param name="password">密码</param>
            <returns>修改用户密码是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.ChangeMyPassword(System.String,System.String)">
            <summary>
            用户修改自己帐户口令
            </summary>
            <param name="oldPassword">帐户原口令</param>
            <param name="newPassword">帐户新口令</param>
            <returns>用户修改自己帐户口令是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.ChangePriv(System.String,Golden.DotNetSDK.Model.Server.PrivGroup)">
            <summary>
            修改用户帐户权限
            </summary>
            <param name="user">已有帐户</param>
            <param name="priv">帐户权限</param>
            <returns>修改用户帐户权限是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.AddUser(System.String,System.String,Golden.DotNetSDK.Model.Server.PrivGroup)">
            <summary>
            添加用户帐户
            </summary>
            <param name="user">帐户</param>
            <param name="password">帐户初始口令</param>
            <param name="priv">帐户权限</param>
            <returns>添加用户是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.RemoveUser(System.String)">
            <summary>
            删除用户帐户
            </summary>
            <param name="user">帐户</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetUsers(System.Int32)">
            <summary>
            获得用户信息
            </summary>
            <param name="count">需要获取的用户个数</param>
            <returns>用户数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.AddAuthorization(System.String,System.String,Golden.DotNetSDK.Model.Server.PrivGroup,System.String)">
            <summary>
            添加信任连接段
            </summary>
            <param name="addr">信任连接段地址</param>
            <param name="mask">信任连接段子网掩码</param>
            <param name="priv">信任连接段拥有的用户权限</param>
            <param name="desc">信任连接段的说明，超过 511 字符将被截断</param>
            <returns>添加信任连接段是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.RemoveAuthorization(System.String,System.String)">
            <summary>
            删除信任连接段
            </summary>
            <param name="addr">信任连接段地址</param>
            <param name="mask">信任连接段子网掩码</param>
            <returns>删除信任连接段是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetAuthorizations(System.Int32)">
            <summary>
            获得信任连接段
            </summary>
            <param name="count">用户需要获得的信任连接段个数</param>
            <returns>信任连接信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetHostTime">
            <summary>
            获取数据库服务器当前时间
            </summary>
            <returns>数据库服务器当前时间</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.FormatMessage(System.UInt32)">
            <summary>
            获取 API 调用返回值的简短描述
            </summary>
            <param name="ecode">返回码</param>
            <returns>错误码对应的错误信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetJobMessage(System.Int32)">
            <summary>
            获取任务的简短描述
            </summary>
            <param name="jobId">任务ID</param>
            <returns>任务描述信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.KillConnection(System.Int32)">
            <summary>
            断开已知连接
            </summary>
            <param name="socket">要断开的连接</param>
            <returns>断开连接是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetDbInfo1(Golden.DotNetSDK.Model.Server.DBParamIndex,System.Int32)">
            <summary>
            获得字符串型数据库系统参数
            </summary>
            <param name="index">要取得的参数索引</param>
            <param name="size">字符串缓冲区尺寸</param>
            <returns>存放取得的字符串参数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetDbInfo2(Golden.DotNetSDK.Model.Server.DBParamIndex)">
            <summary>
            获得整型数据库系统参数
            </summary>
            <param name="index">要取得的参数索引</param>
            <returns>存放取得的整型参数值</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.SetDbInfo1(Golden.DotNetSDK.Model.Server.DBParamIndex,System.String)">
            <summary>
            设置字符串型数据库系统参数
            </summary>
            <param name="index">要设置的参数索引</param>
            <param name="str">要设置的字符串</param>
            <returns>设置字符串型数据库系统参数是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.SetDbInfo2(Golden.DotNetSDK.Model.Server.DBParamIndex,System.Int32)">
            <summary>
            设置整型数据库系统参数
            </summary>
            <param name="index">要设置的参数索引</param>
            <param name="value">要设置的整型数值</param>
            <returns>设置整型数据库系统参数是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetLogicalDrivers">
            <summary>
            获得逻辑盘符(备注：drivers 的内存空间由用户负责维护，长度应不小于 32)
            </summary>
            <returns>返回逻辑盘符组成的字符串，每个盘符占一个字符</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.OpenPath(System.String)">
            <summary>
            打开目录以便遍历其中的文件和子目录
            </summary>
            <param name="dir">要打开的目录</param>
            <returns>打开目录是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.ReadPath">
            <summary>
            读取目录中的文件或子目录
            </summary>
            <returns>读取的目录或子文件信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.ClosePath">
            <summary>
             关闭当前遍历的目录
            </summary>
            <returns>关闭当前遍历的目录是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.MkDir(System.String)">
            <summary>
            建立目录
            </summary>
            <param name="dir">新建目录的全路径</param>
            <returns>建立目录是否成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetFileSize(System.String)">
            <summary>
            获得指定服务器端文件的大小
            </summary>
            <param name="file">文件名</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.ReadFile(System.String,System.Int32,System.Int32)">
            <summary>
            读取服务器端指定文件的内容
            </summary>
            <param name="file">要读取内容的文件名</param>
            <param name="pos">读取文件的起始位置</param>
            <param name="size">要读取文件内容的字节大小</param>
            <returns>文件内容</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.AddBlacklist(Golden.DotNetSDK.Model.Server.BlackListInfo)">
            <summary>
            添加连接黑名单
            </summary>
            <param name="black"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.UpdateBlacklist(System.String,System.String,Golden.DotNetSDK.Model.Server.BlackListInfo)">
            <summary>
            修改连接黑名单
            </summary>
            <param name="oldAddr">原网络连接地址</param>
            <param name="oldMask">原连接子网虚码</param>
            <param name="black">新黑名单实体</param>
            <returns>是否修改成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.RemoveBlacklist(System.String,System.String)">
            <summary>
            删除链接黑名单
            </summary>
            <param name="addr">连接地址</param>
            <param name="mask">连接子网虚码</param>
            <returns>是否删除成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetBlacklists(System.Int32)">
            <summary>
            获得黑名单列表
            </summary>
            <param name="count">获得的个数</param>
            <returns>实际获得的黑名单列表及个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.UpdateAuthorization(System.String,System.String,Golden.DotNetSDK.Model.Server.AuthorizationInfo)">
            <summary>
            更新信任连接段
            </summary>
            <param name="oldAddr">原连接段地址</param>
            <param name="oldMask">原连接段子网掩码</param>
            <param name="authoriza">新的信任连接详细信息实体</param>
            <returns>是否更新成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetPriv">
            <summary>
            获得当前连接用户的权限
            备注：如果还未登陆或不在服务器信任连接中，对应权限为-1，表示没有任何权限。
            </summary>
            <returns>权限(详情参见PrivGroup枚举)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetMaxBlobLen">
            <summary>
            取得数据库允许的blob、str类型测点的最大长度
            </summary>
            <returns>返回最大长度</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.ReConnection(Golden.DotNetSDK.Model.Server.IsReConnection)">
            <summary>
            是否重连
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.FormatQuality(System.UInt16[])">
            <summary>
            取得质量码对应的定义
            </summary>
            <param name="qualities">质量码</param>
            <returns>质量码所对应的含义的实体</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.NamedTypeNameFieldCheck(System.String)">
            <summary>
            检查自定义类型名称及字段命名是否符合规则；
            规则：1. 只允许使用26个英文字母,数字0-9，下划线；
                 2. 必须以字母作为首字母；
                 3. 大小写不敏感。
            </summary>
            <param name="fieldName">需要检查的名称</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.WriteNamedTypeFieldByName(Golden.DotNetSDK.Model.Data.NamedTypeDataModel)">
            <summary>
            将自定义类型的所有字段的值写入byte数组
            </summary>
            <param name="namedTypeData">自定义类型数据实体</param>
            <returns>填充完成的byte数组</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.WriteNamedTypeFieldByName(Golden.DotNetSDK.Model.Data.NamedTypeDataModel,Golden.DotNetSDK.Inter.IBase)">
            <summary>
            将自定义类型的所有字段的值写入byte数组
            </summary>
            <param name="namedTypeData">自定义类型数据实体</param>
            <param name="iBase">执行转换的IBase实体</param>
            <returns>填充完成的</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetBytesFromeFieldValue(Golden.DotNetSDK.Model.Data.NamedTypeFieldValue)">
            <summary>
            将NamedTypeFieldValue中的Value转换成字节数组
            </summary>
            <param name="field"></param>
            <returns>转换完成的字节数组</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.GetBytesFromString(System.String,System.Int32)">
            <summary>
            将string转换成字节数组（字节数组长度为输入的byteLength，超过的将被截断，没有达到，会用空白字符补上。）
            </summary>
            <param name="value">需要转换的字符串</param>
            <param name="byteLength">需要的数组长度</param>
            <returns>处理完成的byte数组</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.ReadNamedTypeFieldByName(System.Int32,System.Byte[])">
            <summary>
            将byte数组中的数据取出来，转换成自定义类型的所有字段
            </summary>
            <param name="tagId">标签点ID</param>
            <param name="bytes">字节数组</param>
            <returns>提取完成的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.ReadNamedTypeFieldByName(System.Int32,System.Byte[],Golden.DotNetSDK.Inter.IBase)">
            <summary>
            将byte数组中的数据取出来，转换成自定义类型的所有字段
            </summary>
            <param name="tagId">标签点ID</param>
            <param name="bytes">字节数组</param>
            <param name="iBase">执行转换的IBase实体</param>
            <returns>提取完成的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.ServerImpl.JudgeConnectStatus(System.Int32)">
            <summary>
            判断连接是否可用
            </summary>
            <param name="handle">连接句柄</param>
            <returns>是否可用 true：表示连接可用；false：表示连接不可用</returns>
        </member>
        <member name="T:Golden.DotNetSDK.Impl.SnapshotImpl">
            <summary>
            快照数据服务
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Inter.ISnapshot">
            <summary>
            快照数据服务
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.SetConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            重置链接
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.GetIntSnapshots(System.Int32[])">
            <summary>
            批量读取 类型为 整型的 开关量、模拟量快照数值
            </summary>
            <param name="ids">点的编号</param>
            <returns>快照数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutIntSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.IntData})">
            <summary>
            批量写入 类型为 整型的 开关量、模拟量快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.GetFloatSnapshots(System.Int32[])">
            <summary>
            批量读取 类型为 浮点型的 模拟量快照数值
            </summary>
            <param name="ids">点的编号</param>
            <returns>快照数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutFloatSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.FloatData})">
            <summary>
            批量写入 类型为 浮点型的 模拟量快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.GetStringSnapshots(System.Int32[])">
            <summary>
            批量读取 类型为 字符串型的 快照数值
            </summary>
            <param name="ids">点的编号</param>
            <returns>快照数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutStringSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.StringData})">
            <summary>
            批量写入 类型为 字符串型的 快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.GetBlobSnapshots(System.Int32[])">
            <summary>
            批量读取 类型为 二进制型的 快照数值
            </summary>
            <param name="ids">点的编号</param>
            <returns>快照数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutBlobSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.BlobData})">
            <summary>
            批量写入 类型为 二进制型的 快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.GetCoorSnapshots(System.Int32[])">
            <summary>
            批量读取 类型为 坐标型的 快照数值
            </summary>
            <param name="ids">点的编号</param>
            <returns>快照数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutCoorSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.CoorData})">
            <summary>
            批量写入 类型为 坐标型的 快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.FixIntSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.IntData})">
            <summary>
            批量写入 类型为 整型的 开关量、模拟量快照数值，仅当输入时间戳与当前快照时间戳完全相等时，会替换当前快照的值和质量，其余情况下会调用 PutIntSnapshots
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.FixFloatSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.FloatData})">
            <summary>
            批量写入 类型为 浮点型的 模拟量快照数值，仅当输入时间戳与当前快照时间戳完全相等时，会替换当前快照的值和质量，其余情况下会调用 PutFloatSnapshots
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.FixCoorSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.CoorData})">
            <summary>
            批量写入 类型为 坐标型的 快照数值，仅当输入时间戳与当前快照时间戳完全相等时，会替换当前快照的值和质量，其余情况下会调用 PutCoorSnapshots
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.IntSubscribeSnapshots(System.Int32[],Golden.DotNetSDK.Model.IntDataChangeDelegate)">
            <summary>
            批量 整型 标签点快照改变的通知订阅
            </summary>
            <param name="ids">点的编号</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.FloatSubscribeSnapshots(System.Int32[],Golden.DotNetSDK.Model.FloatDataChangeDelegate)">
            <summary>
            批量 浮点型 标签点快照改变的通知订阅
            </summary>
            <param name="ids">点的编号</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.IntSubscribeSnapshotsEx(RTDB.Data.Client.Enum.Golden_Option,System.Object,System.Int32[],Golden.DotNetSDK.Model.IntDataChangeDelegateEx)">
            <summary>
            批量 整型 标签点快照改变的通知订阅修改的函数接口   2017.03.28
            </summary>
            <param name="Golden_Option">枚举</param>
            <param name="parma">Object</param>
            <param name="ids">点的编号</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.FloatSubscribeSnapshotsEx(RTDB.Data.Client.Enum.Golden_Option,System.Object,System.Int32[],Golden.DotNetSDK.Model.FloatDataChangeDelegateEx)">
            <summary>
            批量 浮点型 标签点快照改变的通知订阅修改的函数接口  2017.03.28
            </summary>
            <param name="Golden_Option">枚举</param>
            <param name="parma">Object</param>
            <param name="ids">点的编号</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.CancelSubscribeSnapshots">
            <summary>
            取消标签点快照更改通知订阅
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.GetDateTimeSnapshots(System.Int32[])">
            <summary>
            根据ids批量已type类型的展示方式获得datetime类型的快照
            </summary>
            <param name="ids">测点ids</param>
            <returns>datetime类型数据实体集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutDateTimeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData})">
            <summary>
            批量写入datetime类型的快照（只返回成功的条数，不返回为成功的数据）
            </summary>
            <param name="datas">datetime类型的实体集合</param>
            <returns>写入成功的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutDateTimeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData}@)">
            <summary>
            批量写入datetime类型的快照
            </summary>
            <param name="datas">要写入的datetime类型的数据</param>
            <param name="errorList">返回为写入成功的数据的信息及错误码</param>
            <returns>返回写入成功的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.GetNamedTypeSnapshotModel(System.Int32)">
            <summary>
            获取自定义类型测点的单个快照
            </summary>
            <param name="id">测点ID</param>
            <returns>快照实体(Value属性为NamedTypeFieldValue的集合)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.GetNamedTypeSnapshotByte(System.Int32,System.Int32)">
            <summary>
            获取自定义类型测点的单个快照
            </summary>
            <param name="id">测点ID</param>
            <param name="length">该店数据类型长度</param>
            <returns>快照实体（Value为Byte数组）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.GetNamedTypeSnapshotsModel(System.Int32[])">
            <summary>
            批量获取自定义类型测点的快照
            </summary>
            <param name="ids">ID集合</param>
            <returns>快照实体集合(Value属性为NamedTypeFieldValue的集合)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.GetNamedTypeSnapshotsByte(System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            批量获取自定义类型测点的快照
            </summary>
            <param name="idsAndLength">key：测点ID，value：该测点数据的长度</param>
            <returns>快照实体集合（Value为Byte数组）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutNamedTypeSnapshot(Golden.DotNetSDK.Model.Data.NamedTypeDataModel)">
            <summary>
            写入单个自定义类型标签点的快照
            </summary>
            <param name="namedTypeData">快照实体(Value属性为NamedTypeFieldValue的集合)</param>
            <returns>写入结果</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutNamedTypeSnapshot(Golden.DotNetSDK.Model.Data.NamedTypeDataByte)">
            <summary>
            写入单个自定义类型标签点的快照
            </summary>
            <param name="namedTypeData">快照实体（Value为Byte数组）</param>
            <returns>写入结果</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutNamedTypeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataModel})">
            <summary>
            批量写入自定义类型标签点的快照
            </summary>
            <param name="namedTypeDatas">快照集合(实体Value属性为NamedTypeFieldValue的集合)</param>
            <returns>成功写入的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutNamedTypeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataByte})">
            <summary>
            批量写入自定义类型标签点的快照
            </summary>
            <param name="namedTypeDatas">快照集合（实体Value属性为Byte数组）</param>
            <returns>成功写入的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutNamedTypeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataModel},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataModel}@)">
            <summary>
            批量写入自定义类型标签点的快照
            </summary>
            <param name="namedTypeDatas">快照集合(实体Value属性为NamedTypeFieldValue的集合)</param>
            <param name="errors">失败的ID集合</param>
            <returns>成功写入的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutNamedTypeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataByte},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataByte}@)">
            <summary>
            批量写入自定义类型标签点的快照
            </summary>
            <param name="namedTypeDatas">快照集合（实体Value属性为Byte数组）</param>
            <param name="errors">失败的ID集合</param>
            <returns>成功写入的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutIntSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.IntData})">
            <summary>
             批量写入 类型为 整型的 开关量、模拟量快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>返回写入成功的个数及写入不成功的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutFloatSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.FloatData})">
            <summary>
            批量写入 类型为 浮点型的 模拟量快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数及写入出现错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutCoorSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.CoorData})">
            <summary>
            批量写入 类型为 坐标型的 快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>成功的条数及错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutBlobSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.BlobData})">
            <summary>
            批量写入类型为二进制类型的快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>成功的条数及错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutStringSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.StringData})">
            <summary>
            批量写入 类型为 字符串型的 快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>成功的条数及写入错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Inter.ISnapshot.PutDateTimeSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData})">
            <summary>
            批量写入datetime类型的快照
            </summary>
            <param name="list">datetime类型的实体集合</param>
            <returns>返回写入成功的条数及返回错误信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.Float_SubscribeSnapshots_callback_ex(System.UInt32,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            注册到C++ DLL中的回调函数 Float类型数据
            </summary>
            <param name="event_type"></param>
            <param name="handle"></param>
            <param name="param"></param>
            <param name="count"></param>
            <param name="ids"></param>
            <param name="datetimes"></param>
            <param name="ms"></param>
            <param name="values"></param>
            <param name="states"></param>
            <param name="qualities"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.Int_SubscribeSnapshots_callback_ex(System.UInt32,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            注册到C++ DLL中的回调函数 INT类型数据   2017.03.28
            </summary>
            <param name="event_type"></param>
            <param name="handle"></param>
            <param name="param"></param>
            <param name="count"></param>
            <param name="ids"></param>
            <param name="datetimes"></param>
            <param name="ms"></param>
            <param name="values"></param>
            <param name="states"></param>
            <param name="qualities"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.#ctor(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            构造函数
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.SetConnection(Golden.DotNetSDK.Common.RTDBConnection)">
            <summary>
            重置链接
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetErrorMessage(System.UInt32)">
            <summary>
            Gets the error message.
            </summary>
            <param name="_result">The _result.</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetErrorMessage(System.UInt32,System.IntPtr[])">
            <summary>
            Gets the error message.
            </summary>
            <param name="_result"></param>
            <param name="intPtrs"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetErrorMessage(System.UInt32,System.IntPtr)">
            <summary>
            Gets the error message.
            </summary>
            <param name="_result"></param>
            <param name="inptr"></param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetIntSnapshots(System.Int32[])">
            <summary>
            批量读取 类型为 整型的 开关量、模拟量快照数值
            </summary>
            <param name="ids">点的编号</param>
            <returns>快照数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetFloatSnapshots(System.Int32[])">
            <summary>
            批量读取 类型为 浮点型的 模拟量快照数值
            </summary>
            <param name="ids">点的编号</param>
            <returns>快照数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetStringSnapshots(System.Int32[])">
            <summary>
            批量读取 类型为 字符串型的 快照数值
            </summary>
            <param name="ids">点的编号</param>
            <returns>快照数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetBlobSnapshots(System.Int32[])">
            <summary>
            批量读取 类型为 二进制型的 快照数值
            </summary>
            <param name="ids">点的编号</param>
            <returns>快照数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetCoorSnapshots(System.Int32[])">
            <summary>
            批量读取 类型为 坐标型的 快照数值
            </summary>
            <param name="ids">点的编号</param>
            <returns>快照数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutIntSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.IntData})">
            <summary>
             批量写入 类型为 整型的 开关量、模拟量快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>返回写入成功的个数及写入不成功的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutFloatSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.FloatData})">
            <summary>
            批量写入 类型为 浮点型的 模拟量快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数及写入出现错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutStringSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.StringData})">
            <summary>
            批量写入 类型为 字符串型的 快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>成功的条数及写入错误的数据</returns>
        </member>
        <!-- 对于成员“M:Golden.DotNetSDK.Impl.SnapshotImpl.PutBlobSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.BlobData})”忽略有格式错误的 XML 注释 -->
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutCoorSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.CoorData})">
            <summary>
            批量写入 类型为 坐标型的 快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>成功的条数及错误的数据</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutDateTimeSnapshotsCollection(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData})">
            <summary>
            批量写入datetime类型的快照
            </summary>
            <param name="list">datetime类型的实体集合</param>
            <returns>返回写入成功的条数及返回错误信息</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.FixIntSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.IntData})">
            <summary>
            批量写入 类型为 整型的 开关量、模拟量快照数值，仅当输入时间戳与当前快照时间戳完全相等时，会替换当前快照的值和质量，其余情况下会调用 PutIntSnapshots
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.FixFloatSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.FloatData})">
            <summary>
            批量写入 类型为 浮点型的 模拟量快照数值，仅当输入时间戳与当前快照时间戳完全相等时，会替换当前快照的值和质量，其余情况下会调用 PutFloatSnapshots
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.FixCoorSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.CoorData})">
            <summary>
            批量写入 类型为 坐标型的 快照数值，仅当输入时间戳与当前快照时间戳完全相等时，会替换当前快照的值和质量，其余情况下会调用 PutCoorSnapshots
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.IntSubscribeSnapshots(System.Int32[],Golden.DotNetSDK.Model.IntDataChangeDelegate)">
            <summary>
            批量 整型 标签点快照改变的通知订阅
            </summary>
            <param name="ids">点的编号</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.FloatSubscribeSnapshots(System.Int32[],Golden.DotNetSDK.Model.FloatDataChangeDelegate)">
            <summary>
            批量 浮点型 标签点快照改变的通知订阅
            </summary>
            <param name="ids">点的编号</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.CancelSubscribeSnapshots">
            <summary>
            取消标签点快照更改通知订阅
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetDateTimeSnapshots(System.Int32[])">
            <summary>
            根据ids批量已type类型的展示方式获得datetime类型的快照
            </summary>
            <param name="ids">测点ids</param>
            <returns>datetime类型数据实体集合</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetNamedTypeSnapshotModel(System.Int32)">
            <summary>
            获取自定义类型测点的单个快照
            </summary>
            <param name="id">测点ID</param>
            <returns>快照实体(Value属性为NamedTypeFieldValue的集合)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetNamedTypeSnapshotByte(System.Int32,System.Int32)">
            <summary>
            获取自定义类型测点的单个快照
            </summary>
            <param name="id">测点ID</param>
            <param name="length">该测点数据长度</param>
            <returns>快照实体（Value为Byte数组）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.FloatSubscribeSnapshotsEx(RTDB.Data.Client.Enum.Golden_Option,System.Object,System.Int32[],Golden.DotNetSDK.Model.FloatDataChangeDelegateEx)">
            <summary>
            批量 浮点型 标签点快照改变的通知订阅  2017.03.28
            </summary>
            <param name="Golden_Option">枚举</param>
            <param name="parma">指针</param>
            <param name="ids">点的编号</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetNamedTypeSnapshotsModel(System.Int32[])">
            <summary>
            批量获取自定义类型测点的快照
            </summary>
            <param name="ids">ID集合</param>
            <returns>快照实体集合(Value属性为NamedTypeFieldValue的集合)</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.GetNamedTypeSnapshotsByte(System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            批量获取自定义类型测点的快照
            </summary>
            <param name="idsAndLength">key：测点ID，value：该测点数据的长度</param>
            <returns>快照实体集合（Value为Byte数组）</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutNamedTypeSnapshot(Golden.DotNetSDK.Model.Data.NamedTypeDataModel)">
            <summary>
            写入单个自定义类型标签点的快照
            </summary>
            <param name="namedTypeData">快照实体(Value属性为NamedTypeFieldValue的集合)</param>
            <returns>写入结果</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutNamedTypeSnapshot(Golden.DotNetSDK.Model.Data.NamedTypeDataByte)">
            <summary>
            写入单个自定义类型标签点的快照
            </summary>
            <param name="namedTypeData">快照实体（Value为Byte数组）</param>
            <returns>写入结果</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutNamedTypeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataModel})">
            <summary>
            批量写入自定义类型标签点的快照
            </summary>
            <param name="namedTypeDatas">快照集合(实体Value属性为NamedTypeFieldValue>的集合</param>
            <returns>成功写入的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutNamedTypeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataByte})">
            <summary>
            批量写入自定义类型标签点的快照
            </summary>
            <param name="namedTypeDatas">快照集合（实体Value属性为Byte数组）</param>
            <returns>成功写入的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutNamedTypeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataModel},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataModel}@)">
            <summary>
            批量写入自定义类型标签点的快照
            </summary>
            <param name="namedTypeDatas">快照集合(实体Value属性为NamedTypeFieldValue的集合）</param>
            <param name="errors">失败的ID集合</param>
            <returns>成功写入的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutNamedTypeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataByte},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.NamedTypeDataByte}@)">
            <summary>
            批量写入自定义类型标签点的快照
            </summary>
            <param name="namedTypeDatas">快照集合（实体Value属性为Byte数组）</param>
            <param name="errors">失败的ID集合</param>
            <returns>成功写入的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.IntSubscribeSnapshotsEx(RTDB.Data.Client.Enum.Golden_Option,System.Object,System.Int32[],Golden.DotNetSDK.Model.IntDataChangeDelegateEx)">
            <summary>
            批量 整型 标签点快照改变的通知订阅 2017.03.28
            </summary>
            <param name="Golden_Option">枚举</param>
            <param name="parma">指针</param>
            <param name="ids">点的编号</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutIntSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.IntData})">
            <summary>
            批量写入 类型为 整型的 开关量、模拟量快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutFloatSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.FloatData})">
            <summary>
            批量写入 类型为 浮点型的 模拟量快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutStringSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.StringData})">
            <summary>
            批量写入 类型为 字符串型的 快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutCoorSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.CoorData})">
            <summary>
            批量写入 类型为 坐标型的 快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutDateTimeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData})">
            <summary>
            批量写入datetime类型的快照
            </summary>
            <param name="datas">datetime类型的实体集合</param>
            <returns>写入成功的条数</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutDateTimeSnapshots(System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData},System.Collections.Generic.List{Golden.DotNetSDK.Model.Data.DateTimeData}@)">
            <summary>
            批量写入datetime类型的快照（如果全部写入成功，则返回true，出现一条为写入成功，则返回false，在out后的参数errorList中将未写入成功的数据和错误码返回）
            </summary>
            <param name="datas">要写入的datetime类型的数据</param>
            <param name="errorList">返回为写入成功的数据的信息及错误码</param>
            <returns>是否批量写入成功</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Impl.SnapshotImpl.PutBlobSnapshots(Golden.DotNetSDK.Model.Data.Entity{Golden.DotNetSDK.Model.Data.BlobData})">
            <summary>
            批量写入 类型为 二进制型的 快照数值
            </summary>
            <param name="list">需要写入的快照数据</param>
            <returns>写入成功的个数</returns>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Archive.BigJobState">
            <summary>
            大任务执行情况
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobState.BIGJOBDONE">
            <summary>
            大任务执行完成
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobState.BIGJOBISDOING">
            <summary>
            正在执行重要的任务，请稍后再试
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobState.BIGJOBCANCEL">
            <summary>
            后台任务被取消
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Archive.ProcessName">
            <summary>
            进程代号
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.ProcessName.FIRST">
            <summary>
            首个
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.ProcessName.HISTORIAN">
            <summary>
            历史
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.ProcessName.EQUATION">
            <summary>
            计算
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.ProcessName.BASE">
            <summary>
            基本
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.ProcessName.LAST">
            <summary>
            上一个
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.NameDataTypeField">
            <summary>
            组成自定义类型的字段定义
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NameDataTypeField.FieldName">
            <summary>
            定义类型的字段的名称，不要大于21个字节
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NameDataTypeField.Type">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NameDataTypeField.Length">
            <summary>
            字段类型的长度,string,blob等类型的具体的长度，基本类型本身的长度(基本类型可以忽略)，单位：字节。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NameDataTypeField.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.NamedType">
            <summary>
            自定义类型
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedType.Name">
            <summary>
            自定义类型的名称
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedType.TypeFields">
            <summary>
            组成自定义类型的字段
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedType.Desc">
            <summary>
            自定义类型的描述
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.NamedTypeNameToFieldsCount">
            <summary>
            自定义类型名称对应的字段的个数
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.NamedTypeNameToFieldsCountBase">
            <summary>
            自定义类型名称对应的字段的个数
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedTypeNameToFieldsCountBase.Name">
            <summary>
            自定义类型名称
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedTypeNameToFieldsCountBase.Count">
            <summary>
            字段的个数
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedTypeNameToFieldsCount.ID">
            <summary>
            测点id
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.NamedTypePoint">
            <summary>
            自定义类型实体
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Model.Base.NamedTypePoint.#ctor">
            <summary>
            构造函数中实力话基本测点类型和采集测点类型
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedTypePoint.NamedTypeName">
            <summary>
            自定义类型名称
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedTypePoint.Fields">
            <summary>
            自定义类型中所有的组成字段
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedTypePoint.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedTypePoint.BasePoint">
            <summary>
            完整的基本标签点信息
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.NamedTypePoint.ScanPoint">
            <summary>
            采集标签点扩展属性集
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.ExcMin">
            <summary>
            最小里外偏差
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.PropertyBase">
            <summary>
            基本属性（根据id获取每一项属性的基础实体）
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.PropertyBase.ID">
            <summary>
             测点ID
             </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.PropertyBase.Error">
            <summary>
            小错误码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ExcMin.Excmin">
            <summary>
            例外偏差
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.LocationValue">
            <summary>
            设备地址枚举
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.LocationValue.LocationFirst">
            <summary>
            设备地址1
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.LocationValue.LocationSecond">
            <summary>
            设备地址2
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.LocationValue.LocationThird">
            <summary>
            设备地址3
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.LocationValue.LocationFourth">
            <summary>
            设备地址4
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.LocationValue.LocationFifth">
            <summary>
            设备地址5
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.PropertyLocations">
            <summary>
            扩展属性实体
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.PropertyLocations.Location">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.PropertyPointTableTag">
            <summary>
            由测点ID，测点名称及错误码组成的实体类型
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.PropertyPointTableTag.TableTagName">
            <summary>
            测点全名称
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.PropertyPointTableTag.TagName">
            <summary>
            测点名称
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.PropertyValueType">
            <summary>
            测点ID与测点类型信息
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.PropertyValueType.Type">
            <summary>
            测点类型
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.SearchConditionTotal">
            <summary>
            搜索测点的条件实体
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.SearchCondition">
            <summary>
            搜索标签点的条件实体
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchCondition.Tag">
            <summary>
            标签名
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchCondition.Table">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchCondition.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchCondition.Source">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchCondition.Unit">
            <summary>
            工程单位
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchCondition.Instrument">
            <summary>
            设备标签名
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Model.Base.SearchConditionTotal.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchConditionTotal.ValueTypeString">
            <summary>
            标签点类型名称 支持模糊搜索
            例如 bool,uint,int等，长度不得超过21个字节
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchConditionTotal.PointType">
            <summary>
            标签点类别 可以一项或者多项组合
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchConditionTotal.TimeAccuracy">
            <summary>
            时间戳精度 0表示秒；1表示毫秒
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchConditionTotal.SearchCondition">
            <summary>
            搜索参数
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.SearchConditionTotal.SearchMaskValue">
            <summary>
            搜索参数对应的值 (只有设定了搜索参数 SearchCondition，该参数填入的值才会生效 )
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.SearchMask">
            <summary>
            搜索任务条件
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_NULL">
            <summary>
            不使用任何标签点属性作为搜索条件
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_COMPDEV">
            <summary>
            使用压缩偏差作为搜索条件
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_COMPMAX">
            <summary>
            最大压缩间隔
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_COMPMIN">
            <summary>
            最小压缩间隔
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_EXCDEV">
            <summary>
            例外偏差
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_EXCMAX">
            <summary>
            最大例外间隔
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_EXCMIN">
            <summary>
            最小例外间隔
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_SUMMARY">
            <summary>
            是否加速
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_MIRROR">
            <summary>
            是否镜像
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_COMPRESS">
            <summary>
            是否压缩
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_STEP">
            <summary>
            是否阶跃
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_SHUTDOWN">
            <summary>
            是否停机补写
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_ARCHIVE">
            <summary>
            是否归档
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_CHANGER">
            <summary>
            修改人
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_CREATOR">
            <summary>
            创建人
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_LOWLIMIT">
            <summary>
            量程下限
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_HIGHLIMIT">
            <summary>
            量程上限
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_TYPICAL">
            <summary>
            典型值
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_CHANGEDATE">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_CREATEDATE">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_DIGITS">
            <summary>
            数值位数
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_COMPDEVPERCENT">
            <summary>
            压缩偏差百分比
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_EXCDEVPERCENT">
            <summary>
            例外偏差百分比
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_SCAN_BEGIN">
            <summary>
            辅助作用，不能作为搜索条件
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_SCAN">
            <summary>
            是否采集
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_LOCATION1">
            <summary>
            设备位址1
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_LOCATION2">
            <summary>
            设备位址2
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_LOCATION3">
            <summary>
            设备位址3
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_LOCATION4">
            <summary>
            设备位址4
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_LOCATION5">
            <summary>
            设备位址5
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_USERINT1">
            <summary>
            自定义整数1
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_USERINT2">
            <summary>
            自定义整数2
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_USERREAL1">
            <summary>
            自定义单精度浮点数1
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_USERREAL2">
            <summary>
            自定义单精度浮点数2
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_SCAN_END">
            <summary>
            辅助作用，不能作为搜索条件
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_CALC_BEGIN">
            <summary>
            辅助作用，不能作为搜索条件
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_EQUATION">
            <summary>
            方程式
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_TRIGGER">
            <summary>
            计算触发机制
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_TIMECOPY">
            <summary>
            计算结果时间戳参考
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_PERIOD">
            <summary>
            计算周期
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.SearchMask.SEARCH_CALC_END">
            <summary>
            辅助作用，不能作为搜索条件
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag">
            <summary>
            测点属性加载到内存的标记
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_EMPTY_POINT">
            <summary>
            什么也不加载
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_TABLE_DOT_TAG">
            <summary>
            点的全名称
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_DESC">
            <summary>
            描述
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_UNIT">
            <summary>
            单位
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_CHANGER">
            <summary>
            修改人
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_CREATOR">
            <summary>
            创建人
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_LOWLIMIT">
            <summary>
            下限
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_HIGHLIMIT">
            <summary>
            上限
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_TYPICAL">
            <summary>
            典型值
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_CHANGEDATE">
            <summary>
            修改日期
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_CREATEDATE">
            <summary>
            创建日期
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_DIGITS">
            <summary>
            数值位数
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_COMPDEVPERCENT">
            <summary>
            压缩偏差百分比
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_EXCDEVPERCENT">
            <summary>
            例外偏差百分比
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_SOURCE">
            <summary>
            数据源
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_SCAN">
            <summary>
            是否采集
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_INSTRUMENT">
            <summary>
            设备标签
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_LOCATION1">
            <summary>
            设备位址1
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_LOCATION2">
            <summary>
            设备位址2
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_LOCATION3">
            <summary>
            设备位址3
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_LOCATION4">
            <summary>
            设备位址4
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_LOCATION5">
            <summary>
            设备位址5
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_USERINT1">
            <summary>
            自定义整数1
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_USERINT2">
            <summary>
            自定义整数2
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_USERREAL1">
            <summary>
            自定义浮点数1
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_USERREAL2">
            <summary>
            自定义浮点数2
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_BASE_POINT">
            <summary>
            base 属性合集
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_SCAN_POINT">
            <summary>
            scan 属性合集
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagLoadMemoryFlag.LOAD_ALL_POINT">
            <summary>
            所有属性合集
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.TagSortFlag">
            <summary>
            根据标签属性字段对标签点标识进行排序的方式
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagSortFlag.DEFAULT">
            <summary>
            默认 不设置
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagSortFlag.DESCEND">
            <summary>
            表示降序排序，不设置表示升序排列
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagSortFlag.CASE_SENSITIVE">
            <summary>
            表示进行字符串类型字段比较时大小写敏感，不设置表示不区分大小写
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagSortFlag.RECYCLED">
            <summary>
            表示对可回收标签进行排序，不设置表示对正常标签排序
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.DataSort">
            <summary>
            数据库 数据排序方式
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataSort.TABLE">
            <summary>
            首先按所属表排序，同一个表内的标签点之间按标签点名称排序
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataSort.TAG">
            <summary>
            以标签点名称排序
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataSort.ID">
            <summary>
            以标签点ID排序
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.TagFieldIndex">
            <summary>
            排序的枚举
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_BASE_FIRST">
            <summary>
            first
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_TAG">
            <summary>
            Tag
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_TYPE">
            <summary>
            Type
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_TABLE">
            <summary>
            Table
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_DESC">
            <summary>
            Desc
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_UNIT">
            <summary>
            Unit
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_ARCHIVE">
            <summary>
            Archive
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_DIGITS">
            <summary>
            Digits
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_SHUTDOWN">
            <summary>
            ShutDown
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_LOWLIMIT">
            <summary>
            LowLimit
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_HIGHLIMIT">
            <summary>
            HighLimit
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_STEP">
            <summary>
            Step
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_TYPICAL">
            <summary>
            Typical
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_COMPRESS">
            <summary>
            Compress
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_COMPDEV">
            <summary>
            Compdev
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_COMPDEVPERCENT">
            <summary>
            Compdevpercent
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_COMPTIMEMAX">
            <summary>
            ComptimeMax
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_COMPTIMEMIN">
            <summary>
            ComptimeMin
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_EXCDEV">
            <summary>
            Excdev
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_EXCDEVPERCENT">
            <summary>
            Excdevpercent
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_EXCTIMEMAX">
            <summary>
            Exctimemax
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_EXCTIMEMIN">
            <summary>
            Exctimemin
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_CLASSOF">
            <summary>
            Classof
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_CHANGEDATE">
            <summary>
            Changedate
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_CHANGER">
            <summary>
            Changer
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_CREATEDATE">
            <summary>
            Createdate
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_CREATOR">
            <summary>
            Creator
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_MIRROR">
            <summary>
            Mirror
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_MS">
            <summary>
            Microsecond
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_FULLNAME">
            <summary>
            Table_Dot_Tag
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_BASE_LAST">
            <summary>
            base_last
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_SCAN_FIRST">
            <summary>
            scan_frist
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_SOURCE">
            <summary>
            Source
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_SCAN">
            <summary>
            Scam
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_INSTRUMENT">
            <summary>
            Instrument
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_LOCATION1">
            <summary>
            locations[0]
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_LOCATION2">
            <summary>
             locations[2]
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_LOCATION3">
            <summary>
             locations[3]
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_LOCATION4">
            <summary>
            locations[4]
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_LOCATION5">
            <summary>
            locations[5]
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_USERINT1">
            <summary>
            userints[0]
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_USERINT2">
            <summary>
            userints[1]
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_USERREAL1">
            <summary>
            userreals[0]
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_USERREAL2">
            <summary>
            userreals[1]
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_SCAN_LAST">
            <summary>
            scan_last
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_CALC_FIRST">
            <summary>
            calc_first
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_EQUATION">
            <summary>
            Equation
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_TRIGGER">
            <summary>
            Trigger
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_TIMECOPY">
            <summary>
            Timecopy
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_PERIOD">
            <summary>
            Period
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_CALC_LAST">
            <summary>
            calc_last
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_SNAPSHOT_FIRST">
            <summary>
            snap_first
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_TIMESTAMP">
            <summary>
             Snapshot Stamp (ms)
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_VALUE">
            <summary>
            Snapshot Value
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_QUALITY">
            <summary>
            Snapshot Quality
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagFieldIndex.INDEX_SNAPSHOT_LAST">
            <summary>
            snap_last
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.BasePoint">
            <summary>
            完整的基本标签点信息
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Tag">
            <summary>
            标签点名
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Id">
            <summary>
            标签点ID
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.TableId">
            <summary>
            标签点所属表ID
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Desc">
            <summary>
            有关标签点的描述性文字
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Unit">
            <summary>
            工程单位
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Archive">
            <summary>
            是否存档
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Digits">
            <summary>
            数值
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.ShutDown">
            <summary>
            停机状态字（Shutdown）
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.LowLimit">
            <summary>
            量程下限
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.HighLimit">
            <summary>
            量程上限
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Step">
            <summary>
            是否阶跃
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Typical">
            <summary>
            典型值
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Compress">
            <summary>
            是否压缩
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Compdev">
            <summary>
            压缩偏差
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.CompdevPercent">
            <summary>
            压缩偏差百分比
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.CompTimeMax">
            <summary>
            最大压缩间隔
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.CompTimeMin">
            <summary>
            最短压缩间隔
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Excdev">
            <summary>
            例外偏差
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.ExcdevPercent">
            <summary>
            例外偏差百分比
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.ExcTimeMax">
            <summary>
            最大例外间隔
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.ExcTimeMin">
            <summary>
            最短例外间隔
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Classof">
            <summary>
            标签点类别 （Classof=0表示基本点；Classof=1表示采集点；Classof=2表示计算点；Classof=3表示采集计算点）
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.ChangeDate">
            <summary>
            标签点属性最后一次被修改的时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Changer">
            <summary>
            标签点属性最后一次被修改的用户名GOLDEN_USER_SIZE
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.CreateDate">
            <summary>
            标签点被创建的时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Creator">
            <summary>
            标签点创建者的用户名 GOLDEN_USER_SIZE
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Mirror">
            <summary>
            允许镜像 0：OFF,1：ON
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.MicroSecond">
            <summary>
            时间戳精度 0:表示秒，1表示毫秒
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.ScanIndex">
            <summary>
            采集点扩展属性集存储地址索引
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.CalcIndex">
            <summary>
            计算点扩展属性集存储地址索引
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.AlarmIndex">
            <summary>
             报警点扩展属性集存储地址索引
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.TableDotTag">
            <summary>
            标签点全名，格式为“表名称.标签点名称” GOLDEN_TAG_SIZE, GOLDEN_TAG_SIZE
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.BasePoint.Padding">
            <summary>
             基本标签点备用字节
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.PointType">
            <summary>
            标签点类型枚举
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.PointType.Every">
            <summary>
            任意类型
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.PointType.BASE">
            <summary>
            基本标签点，所有类别标签点均在基本标签点的属性集上扩展自己的属性集
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.PointType.SCAN">
            <summary>
            采集标签点
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.PointType.CALC">
            <summary>
            计算标签点
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.PointType.ALARM">
            <summary>
            报警标签点。
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.MinPoint">
            <summary>
            最小的属性集来创建单个标签点
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.MinPoint.PointId">
            <summary>
            数据点编号
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.MinPoint.Tag">
            <summary>
            标签点全名称
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.MinPoint.Type">
            <summary>
            标签点数值类型
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.MinPoint.TableName">
            <summary>
            数据表名称
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.MinPoint.TimePoke">
            <summary>
            数据点时间戳类型
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.ClacPoint">
            <summary>
            计算点扩展属性集
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ClacPoint.Id">
            <summary>
            标签点ID
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ClacPoint.Equation">
            <summary>
            实时方程式
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ClacPoint.Trigger">
            <summary>
            计算触发机制。（Trigger=1表示事件触发，Trigger=2表示周期触发，Trigger=0表示无触发,Trigger=3表示定时触发，定时触发的设置Period定时周期）
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ClacPoint.Timecopy">
            <summary>
            算结果时间戳参考
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ClacPoint.Period">
            <summary>
            对于“定时触发”的计算点，设定其计算周期，单位：秒
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.DataType">
            <summary>
            标签点数值类型 (决定了标签点数值所占用的存储字节数)
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.BOOL">
            <summary>
            布尔类型, 0或1
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.UINT8">
            <summary>
            无符号8位整数，占用1字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.INT8">
            <summary>
            有符号8位整数，占用1字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.CHAR">
            <summary>
            单字节字符，占用1字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.UINT16">
            <summary>
            无符号16位整数，占用2字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.INT16">
            <summary>
            有符号16位整数，占用2字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.UINT32">
            <summary>
            无符号32位整数，占用4字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.INT32">
            <summary>
            有符号32位整数，占用4字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.INT64">
            <summary>
            有符号64位整数，占用8字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.REAL16">
            <summary>
            16位浮点数，占用2字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.REAL32">
            <summary>
            32位单精度浮点数，占用4字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.REAL64">
            <summary>
            64位双精度浮点数，占用8字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.COOR">
            <summary>
            二维坐标，具有x、y两个维度的浮点数，占用8字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.STRING">
            <summary>
            字符串，长度不超过存储页面大小
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.BLOB">
            <summary>
            二进制数据块，占用字节不超过存储页面大小
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.NamedTypeT">
            <summary>
            自定义类型
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.DataType.DateTime">
            <summary>
            时间类型
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.FullPoint">
            <summary>
            Golden数据库完整标签点
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Model.Base.FullPoint.#ctor">
            <summary>
            构造函数，实例化base、scan、clac类
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.FullPoint.BasePoint">
            <summary>
            完整的基本标签点信息
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.FullPoint.ScanPoint">
            <summary>
            采集标签点扩展属性集
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.FullPoint.ClacPoint">
            <summary>
            计算点扩展属性集
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.PointTimePoke">
            <summary>
            数据点时间戳类型
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.PointTimePoke.SECOND">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.PointTimePoke.MILLISESECOND">
            <summary>
            毫秒
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.ScanPoint">
            <summary>
            采集标签点扩展属性集
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Model.Base.ScanPoint.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ScanPoint.Id">
            <summary>
            全库唯一标识。0表示无效
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ScanPoint.Source">
            <summary>
             数据源
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ScanPoint.Scan">
            <summary>
            是否采集。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ScanPoint.Instrument">
            <summary>
            设备标签
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ScanPoint.Locations">
            <summary>
            共包含五个设备位址，缺省值全部为0。GOLDEN_LOCATIONS_SIZE
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ScanPoint.UserInts">
            <summary>
            共包含两个自定义整数，缺省值全部为0。GOLDEN_USERINT_SIZE
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ScanPoint.UserReals">
            <summary>
            共包含两个自定义单精度浮点数，缺省值全部为0。GOLDEN_USERREAL_SIZE
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.ScanPoint.Padding">
            <summary>
            采集标签点备用字节。GOLDEN_PACK_OF_SCAN
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.TagChangeReason">
            <summary>
            标签变更原因
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagChangeReason.TAG_CREATED">
            <summary>
            标签点被创建
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagChangeReason.TAG_UPDATED">
            <summary>
            标签点属性被更新
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagChangeReason.TAG_REMOVED">
            <summary>
            标签点被放入回收站
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagChangeReason.TAG_RECOVERD">
            <summary>
            标签点被恢复
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagChangeReason.TAG_PURGED">
            <summary>
            标签点被清除
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagChangeReason.TAB_UPDATED">
            <summary>
            标签点表被重命名
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.TagChangeReason.TAB_REMOVED">
            <summary>
            标签点表被删除
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.PointId">
            <summary>
            标签点ID
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.PointId.ID">
            <summary>
            标签点ID
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.UserIntValue">
            <summary>
            自定义整数枚举
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.UserIntValue.UserIntFirst">
            <summary>
            自定义整数一
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.UserIntValue.UserIntSecond">
            <summary>
            自定义整数2
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.UserRealValue">
            <summary>
            自定义浮点数
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.UserRealValue.UserRealFirst">
            <summary>
            自定义浮点数一
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Base.UserRealValue.UserRealSecond">
            <summary>
            自定义浮点数二
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Computer.ComputerEntity">
            <summary>
            方程式计算实体
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Computer.ComputerEntity.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Computer.ComputerFlag">
            <summary>
            方程式计算方式枚举
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Computer.ComputerFlag.Supplement">
            <summary>
            不为0，表示进行重算，删除时间范围内已经存在历史数据
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Computer.ComputerFlag.Recalculation">
            <summary>
            表示补算，保留时间范围内已经存在历史数据，覆盖同时刻的计算值
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.DateTimeData">
            <summary>
            时间类型
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.DateTimeData.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.DateTimeData.Time">
            <summary>
            时间（如果是毫秒点，则Time中带有毫秒的值）
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.DateTimeData.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.DateTimeData.Qualitie">
            <summary>
            质量码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.DateTimeData.Error">
            <summary>
            错误码
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.NamedTypeDataModel">
            <summary>
            自定义类型，Value为 NamedTypeFieldValue的集合
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.NamedTypeDataModel.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.Entity`1">
            <summary>
            数据实体
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Model.Data.Entity`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.Entity`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.Entity`1.Count">
            <summary>
            实际成功的数量
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.FloatDataChangeDelegate">
            <summary>
            浮点型 快照订阅回调函数
            </summary>
            <param name="list">浮点型 数据实体</param>
        </member>
        <member name="T:Golden.DotNetSDK.Model.IntDataChangeDelegate">
            <summary>
            整型 快照订阅回调函数
            </summary>
            <param name="list">整型 数据实体</param>
        </member>
        <member name="T:Golden.DotNetSDK.Model.FloatDataChangeDelegateEx">
            <summary>
            浮点型 快照订阅回调函数 2017.03.28
            </summary>
            <param name="Golden_EventType">枚举</param>
            <param name="ISnapshot">接口对象</param>
            <param name="Object">用户输入参数</param>
            <param name="list">浮点型 数据实体</param>
        </member>
        <!-- 对于成员“T:Golden.DotNetSDK.Model.IntDataChangeDelegateEx”忽略有格式错误的 XML 注释 -->
        <member name="T:Golden.DotNetSDK.Model.TagsChangeDelegate">
            <summary>
            标签点属性更改通知订阅回调接口
            </summary>
            <param name="ids">标签点被订阅且属性发生更改的标识列表</param>
            <param name="reason">表示引起变更的源类型</param>
        </member>
        <member name="T:Golden.DotNetSDK.Model.TagsChangeDelegateEx">
            <summary>
            标签点属性更改通知订阅回调接口 2017.03.28
            </summary>
            <param name="enent_type">枚举</param>
            <param name="IBase">接口对象</param>
            <param name="ids">标签点被订阅且属性发生更改的标识列表</param>
            <param name="reason">表示引起变更的源类型</param>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.CoorData">
            <summary>
            坐标型 数据
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Model.Data.CoorData.ToString">
            <summary>
            重写coor类型.ToString()方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.CoorData.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.CoorData.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.CoorData.Ms">
            <summary>
            实时数值时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.CoorData.X">
            <summary>
            X
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.CoorData.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.CoorData.Qualitie">
            <summary>
            质量码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.CoorData.Error">
            <summary>
            错误码
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Archive.BigJob">
            <summary>
            正在执行的后台任务的信息实体
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.BigJob.Process">
            <summary>
            进程名称
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.BigJob.Path">
            <summary>
            主文件所在目录路径
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.BigJob.File">
            <summary>
            主文件名
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.BigJob.Job">
            <summary>
            任务的标识
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.BigJob.State">
            <summary>
            任务的执行状态
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.BigJob.End_time">
            <summary>
            任务的完成时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.BigJob.Progress">
            <summary>
            任务的进度百分比
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Archive.BigJobName">
            <summary>
            正在进行的后台任务的标识
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobName.MERGE">
            <summary>
            合并附属文件到主文件---(属于历史数据服务)
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobName.ARRANGE">
            <summary>
            整理存档文件，整理过程中会完成合并---(属于历史数据服务)
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobName.REINDEX">
            <summary>
            重建索引---(属于历史数据服务)
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobName.BACKUP">
            <summary>
            备份---(属于历史数据服务)
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobName.REACTIVE">
            <summary>
            激活为活动存档---(属于历史数据服务)
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobName.COMPUTE">
            <summary>
            历史计算---(属于方程式服务)
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobName.UPDATE_TABLE">
            <summary>
            修改表名称---(属于标签点信息服务)
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.BigJobName.REMOVE_TABLE">
            <summary>
            删除表---(属于标签点信息服务)
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Archive.HeaderPage">
            <summary>
            存档文件信息
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.DbVer">
            <summary>
            所属数据库版本
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.DataVer">
            <summary>
            数据格式变更版本
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.Begin">
            <summary>
            数据起始时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.End">
            <summary>
            数据结束时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.BeginMs">
            <summary>
            保留，暂不使用。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.EndMs">
            <summary>
            保留，暂不使用。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.ModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.MergeTime">
            <summary>
            上次合并时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.ArrangeTime">
            <summary>
            上次整理时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.ReindexTime">
            <summary>
            上次重建索引时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.BackupTime">
            <summary>
            上次备份时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.RatedCapacity">
            <summary>
            创建时容量（额定容量）
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.Capacity">
            <summary>
            当前容量，文件内包含的总数据页数，不包括头页。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.Size">
            <summary>
            实际使用量，已被占用的数据页数，不包括头页。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.ExCapacity">
            <summary>
            附属文件容量
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.IsMain">
            <summary>
            是主文件还是附属文件
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.PageSize">
            <summary>
            单个页的字节尺寸，单位为KB。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.IdOrCount">
            <summary>
            主文件在这里存放附属文件数量，附属文件在这里存放自身的ID。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.AutoMerge">
            <summary>
            启用自动合并
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.AutoArrange">
            <summary>
            启用自动整理
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.Merged">
            <summary>
            1:已合并，0:尚未合并或合并后又产生了新的附属文件。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.Arranged">
            <summary>
            1：已整理，0：尚未整理过或整理后内容发生变更。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.Reserved_1">
            <summary>
            保留字节
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.FileName">
            <summary>
            在这里存放自己的文件名。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.Crc32">
            <summary>
            以上内容的CRC32校验码，暂不启用。
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.HeaderPage.Ids">
            <summary>
            仅对主文件有效，依次存放某个附属文件是否启用。1表示启用，0表示未创建或未启用。
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Quality">
            <summary>
            系统定义质量码
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Quality.GOOD">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Quality.NODATA">
            <summary>
            无数据
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Quality.CREATED">
            <summary>
            创建
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Quality.SHUTDOWN">
            <summary>
            停机
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Quality.CALCOFF">
            <summary>
            计算停止
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Quality.BAD">
            <summary>
            坏点
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Quality.DIVBYZERO">
            <summary>
            被零除
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Quality.REMOVED">
            <summary>
            已被删除
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Quality.OPC">
            <summary>
            从0x0100至0x01FF为OPC质量码
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Quality.USER">
            <summary>
            此质量码（含）之后为用户自定义
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.IntData">
            <summary>
            整型 数据
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.IntData.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.IntData.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.IntData.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.IntData.Ms">
            <summary>
            实时数值时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.IntData.Qualitie">
            <summary>
            质量码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.IntData.Error">
            <summary>
            错误码
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Archive.ArchiveEntity">
            <summary>
            存档文件的实体类
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.ArchiveEntity.Path">
            <summary>
            文件所在目录路径，必须以"\"或"/"结尾
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.ArchiveEntity.File">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Archive.ArchiveEntity.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Archive.ArchiveState">
            <summary>
            文件状态
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.ArchiveState.INVALID">
            <summary>
            无效
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.ArchiveState.ACTIVED">
            <summary>
            活动
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.ArchiveState.NORMAL">
            <summary>
            普通
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Archive.ArchiveState.READONLY">
            <summary>
            只读
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Base.Table">
            <summary>
            数据表信息
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.Table.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.Table.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.Table.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Base.Table.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.BlobData">
            <summary>
            二进制型 数据
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.BlobData.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.BlobData.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.BlobData.Ms">
            <summary>
            实时数值时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.BlobData.Value">
            <summary>
            二进制数据
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.BlobData.Qualitie">
            <summary>
            质量码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.BlobData.Error">
            <summary>
            错误码
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.FloatData">
            <summary>
            浮点型 数据
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.FloatData.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.FloatData.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.FloatData.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.FloatData.Ms">
            <summary>
            实时数值时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.FloatData.Qualitie">
            <summary>
            质量码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.FloatData.Error">
            <summary>
            错误码
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Data.StringData">
            <summary>
            字符串型 数据
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.StringData.Id">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.StringData.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.StringData.Ms">
            <summary>
            实时数值时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.StringData.Value">
            <summary>
            字符串数据
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.StringData.Qualitie">
            <summary>
            质量码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Data.StringData.Error">
            <summary>
            错误码
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Historian.HistorianMode">
            <summary>
            历史数据模式
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Historian.HistorianMode.NEXT">
            <summary>
            寻找下一个最近的数据
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Historian.HistorianMode.PREVIOUS">
            <summary>
            寻找上一个最近的数据
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Historian.HistorianMode.EXACT">
            <summary>
            取指定时间的数据，如果没有则抛出异常 数据没有找到
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Historian.HistorianMode.INTER">
            <summary>
            取指定时间的内插值数据
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Historian.SummaryEntity">
            <summary>
            统计 实体
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Model.Historian.SummaryEntity.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Model.Historian.SummaryEntity.#ctor(System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="startTime"></param>
            <param name="endTime"></param>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Historian.SummaryEntity.Max">
            <summary>
            表示统计时间段内的最大数值
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Historian.SummaryEntity.Min">
            <summary>
            表示统计时间段内的最小数值
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Historian.SummaryEntity.Total">
            <summary>
            表示统计时间段内的累计值，结果的单位为标签点的工程单位
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Historian.SummaryEntity.CalcAvg">
            <summary>
            表示统计时间段内的算术平均值
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Historian.SummaryEntity.PowerAvg">
            <summary>
            表示统计时间段内的加权平均值
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Historian.SummaryEntity.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Historian.SummaryEntity.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Historian.SummaryEntity.Count">
            <summary>
            计算统计值的数据个数
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Historian.SummaryEntity.Error">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Server.AuthorizationInfo">
            <summary>
            信任连接详细信息实体
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.AuthorizationInfo.IpAddr">
            <summary>
            Ip地址
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.AuthorizationInfo.Mask">
            <summary>
            子网虚码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.AuthorizationInfo.Priv">
            <summary>
            权限
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.AuthorizationInfo.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Server.BlackListInfo">
            <summary>
            黑名单实体
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.BlackListInfo.Addr">
            <summary>
            网络地址
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.BlackListInfo.Mask">
            <summary>
            子网虚码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.BlackListInfo.Desc">
            <summary>
            说明
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Server.DBParamIndex">
            <summary>
            数据库参数
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.STR_FIRST">
            <summary>
            字符型第一个参数
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.TABLE_FILE">
            <summary>
            标签点表文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.BASE_FILE">
            <summary>
            基本标签点文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.SCAN_FILE">
            <summary>
            采集标签点文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.CALC_FILE">
            <summary>
            计算标签点文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.SNAP_FILE">
            <summary>
            标签点快照文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.LIC_FILE">
            <summary>
            协议文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.HIS_FILE">
            <summary>
            历史信息文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.LOG_DIR">
            <summary>
            服务器端日志文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.USER_FILE">
            <summary>
            用户权限信息文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.SERVER_FILE">
            <summary>
            网络服务进程与其它进程交互所用的共享内存文件，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.EQAUTION_FILE">
            <summary>
            方程式服务进程与其它进程交互所用的共享内存文件，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.ARV_PAGES_FILE">
            <summary>
            历史数据缓存文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.ARVEX_PAGES_FILE">
            <summary>
            补历史数据缓存文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.AUTH_FILE">
            <summary>
            信任连接段信息文件路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.RECYCLED_BASE_FILE">
            <summary>
            可回收基本标签点文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.RECYCLED_SCAN_FILE">
            <summary>
            可回收采集标签点文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.RECYCLED_CALC_FILE">
            <summary>
            可回收计算标签点文件全路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.AUTO_BACKUP_PATH">
            <summary>
            自动备份目的地全路径，必须以“\”或“/”结束，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.SERVER_SENDER_IP">
            <summary>
            镜像发送地址，字符串最大长度为  MAX_HOSTNAME_SIZE
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.BLACKLIST_FILE">
            <summary>
            连接黑名单文件路径，字符串最大长度为 MAX_PATH
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_LIC_TYPE">
            <summary>
            授权方式
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_INDEX_DIR">
            <summary>
             索引文件存放目录
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_MIRROR_BUFFER_PATH">
            <summary>
            镜像缓存本地文件所在路径
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.STR_LAST">
            <summary>
            字符型最后一个参数
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_INT_FIRST">
            <summary>
            
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_LIC_TABLES_COUNT">
            <summary>
            协议中限定的标签点表数量
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_LIC_TAGS_COUNT">
            <summary>
            协议中限定的所有标签点数量
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_LIC_SCAN_COUNT">
            <summary>
            协议中限定的采集标签点数量
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_LIC_CALC_COUNT">
            <summary>
            协议中限定的计算标签点数量
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_LIC_ARCHICVE_COUNT">
            <summary>
            协议中限定的历史存档文件数量
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_SERVER_IPC_SIZE">
            <summary>
            网络服务进程与其它进程进行交互所使用的共享内存池的字节尺寸
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_EQUATION_IPC_SIZE">
            <summary>
            网络服务进程与其它进程进行交互所使用的共享内存池的字节尺寸
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_HASH_TABLE_SIZE">
            <summary>
            标签点求余哈希表的尺寸
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_TAG_DELETE_TIMES">
            <summary>
            可整库删除标签点的次数
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_SERVER_PORT">
            <summary>
            网络服务独立服务器端口
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_SERVER_SENDER_PORT">
            <summary>
            网络服务镜像发送端口
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_SERVER_RECEIVER_PORT">
            <summary>
            网络服务镜像接收端口
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_SERVER_MODE">
            <summary>
            网络服务启动模式
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_SERVER_CONNECTION_COUNT">
            <summary>
            协议中限定网络服务连接并发数量
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_ARV_PAGES_NUMBER">
            <summary>
            历史数据缓存中，页数量
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_ARVEX_PAGES_NUMBER">
            <summary>
            补历史数据缓存中，页数量
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_EXCEPTION_AT_SERVER">
            <summary>
            是否由服务器进行例外判定
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_ARV_PAGE_RECYCLE_DELAY">
            <summary>
            历史数据缓存页回收延时（毫秒）(作废的枚举项obsolete)
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_EX_ARCHIVE_SIZE">
            <summary>
            历史数据存档文件附属文件字节大小（单位：MB）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_ARCHIVE_BATCH_SIZE">
            <summary>
            分批返回存储值的每段大小
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_DATAFILE_PAGESIZE">
            <summary>
            系统数据文件页大小
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_ARV_ASYNC_QUEUE_NORMAL_DOOR">
            <summary>
            历史数据缓存队列中速归档区（单位：百分比）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_INDEX_ALWAYS_IN_MEMORY">
            <summary>
            历史数据索引常驻内存的字节大小（单位：MB）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_DISK_MIN_REST_SIZE">
            <summary>
            最低可用磁盘空间（单位：MB）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_MIN_SIZE_OF_ARCHIVE">
            <summary>
            历史存档文件和附属文件的最小尺寸（单位：KB）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_DELAY_OF_AUTO_MERGE_OR_ARRANGE">
            <summary>
            自动合并/整理最小延迟（单位：小时）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_START_OF_AUTO_MERGE_OR_ARRANGE">
            <summary>
            自动合并/整理开始时间（单位：点钟）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_STOP_OF_AUTO_MERGE_OR_ARRANGE">
            <summary>
            自动合并/整理停止时间（单位：点钟）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_START_OF_AUTO_BACKUP">
            <summary>
            自动备份开始时间（单位：点钟）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_STOP_OF_AUTO_BACKUP">
            <summary>
            自动备份停止时间（单位：点钟）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_MAX_LATENCY_OF_SNAPSHOT">
            <summary>
            允许服务器时间之后多少小时内的数据进入快照（单位：小时）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_PAGE_ALLOCATOR_RESERVE_SIZE">
            <summary>
            活动页分配器预留大小（单位：KB）， 0 表示使用操作系统视图大小
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_INCLUDE_SNAPSHOT_IN_QUERY">
            <summary>
            决定取样本值和统计值时，快照是否应该出现在查询结果中
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_LIC_BLOB_COUNT">
            <summary>
            协议中限定的字符串或BLOB类型标签点数量
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_MIRROR_BUFFER_SIZE">
            <summary>
            镜像文件大小（单位：GB）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_BLOB_ARVEX_PAGES_NUMBER">
            <summary>
             blob、str补历史的默认缓存页数量，默认为协议数2倍（blob、str点）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_MIRROR_EVENT_QUEUE_CAPACITY">
            <summary>
            镜像缓存文件页大小，默认为协议数5倍
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_NOTIFY_NOT_ENOUGH_SPACE">
            <summary>
             一旦启用，设置为ON，则通过API返回大错误码，否则只记录日志
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_ARCHIVE_FIXED_RANGE">
            <summary>
            历史数据存档文件的固定时间范围，默认为0表示不使用固定时间范围（单位：分钟）
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_ONE_CLINET_MAX_CONNECTION_COUNT">
            <summary>
            单个客户端允许的最大连接数，默认为0表示不限制
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_ARV_PAGES_CAPACITY">
            <summary>
            历史数据缓存所占字节大小，单位：字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_ARVEX_PAGES_CAPACITY">
            <summary>
            历史数据补写缓存所占字节大小，单位：字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_BLOB_ARVEX_PAGES_CAPACITY">
            <summary>
             blob、string类型标签点历史数据补写缓存所占字节大小，单位：字节
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_LOCKED_PAGES_MEM">
            <summary>
            制定分配给数据库用的 内存大小，单位：MB
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.DBParamIndex.PARAM_INT_LAST">
            <summary>
            
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Server.IsReConnection">
            <summary>
            是否重连
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.IsReConnection.NOCONNECTION">
            <summary>
            不重连
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.IsReConnection.RECONNECTION">
            <summary>
            重连
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Server.QualityFormat">
            <summary>
            质量码所对应的意义描述
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.QualityFormat.Quality">
            <summary>
            质量码
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.QualityFormat.FormatMsg">
            <summary>
            意义
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Server.RTDBFilePath">
            <summary>
            文件或子目录实体类
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.RTDBFilePath.Path">
            <summary>
            文件、子目录全路径
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.RTDBFilePath.IsDir">
            <summary>
            标示目录或文件，1 为目录，0 为文件
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.RTDBFilePath.Actiontime">
            <summary>
            为文件时，表示访问时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.RTDBFilePath.Createtime">
            <summary>
            为文件时，表示建立时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.RTDBFilePath.Modifytime">
            <summary>
            为文件时，表示修改时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.RTDBFilePath.Size">
            <summary>
            为文件时，表示文件大小
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Server.HostConnectInfo">
            <summary>
            连接到数据库服务器的连接信息
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.HostConnectInfo.Ipaddr">
            <summary>
            连接的客户端IP地址
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.HostConnectInfo.Port">
            <summary>
            连接端口
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.HostConnectInfo.Job">
            <summary>
            连接最近处理的任务
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.HostConnectInfo.JobTime">
            <summary>
            最近处理任务的时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.HostConnectInfo.ConnectTime">
            <summary>
            客户端连接时间
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.HostConnectInfo.Client">
            <summary>
            连接的客户端主机名称
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.HostConnectInfo.Process">
            <summary>
            连接的客户端程序名
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.HostConnectInfo.User">
            <summary>
            连接的客户端用户
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Server.JobMessage">
            <summary>
            任务描述信息实体
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.JobMessage.JobId">
            <summary>
            任务ID
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.JobMessage.JobName">
            <summary>
            任务名字
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.JobMessage.JobDesc">
            <summary>
            任务描述
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Server.PrivGroup">
            <summary>
            连接或者用户权限枚举
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.PrivGroup.NO">
            <summary>
            没有权限
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.PrivGroup.RO">
            <summary>
            只读
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.PrivGroup.DW">
            <summary>
            数据记录
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.PrivGroup.TA">
            <summary>
             标签点表管理员
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Model.Server.PrivGroup.SA">
             <summary>
            数据库管理员 
             </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Model.Server.UsersInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.UsersInfo.User">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Golden.DotNetSDK.Model.Server.UsersInfo.Priv">
            <summary>
            用户权限
            </summary>
        </member>
        <member name="T:Golden.DotNetSDK.Util.SearchConditionConvert`1">
            <summary>
            查询条件转化器
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Util.SearchConditionConvert`1.InitPros(`0)">
            <summary>
            遍历Condition类中的属性，判断并初始化
            </summary>
            <param name="condition"></param>
        </member>
        <member name="T:Golden.DotNetSDK.Util.MethodConvert">
            <summary>
            方法转化器
            </summary>
        </member>
        <member name="F:Golden.DotNetSDK.Util.MethodConvert._connection">
            <summary>
            实时数据库连接
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Util.MethodConvert.IntSubscribeSnapshotsConvert(System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            浮点型 数据订阅 转换方法
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Util.MethodConvert.IntSubscribeSnapshotsConvert_ex(System.UInt32,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            浮点型 数据订阅 转换方法 2017.03.28
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Util.MethodConvert.FloatSubscribeSnapshotsConvert_ex(System.UInt32,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            浮点型 数据订阅 转换方法  2017.03.28
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Util.MethodConvert.FloatSubscribeSnapshotsConvert(System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            浮点型 数据订阅 转换方法
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Util.MethodConvert.TagsChangeDelegateConvert(System.Int32,System.IntPtr,System.Int32)">
            <summary>
            批量标签点修改通知订阅回调函数转换
            </summary>
            <param name="count">变动的标签点条数</param>
            <param name="ids">标签点列表</param>
            <param name="what">变动的原因</param>
            <returns></returns>
        </member>
        <member name="T:Golden.DotNetSDK.Util.RTDBConvert">
            <summary>
            工具转换器
            </summary>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToDateTime(System.Int32)">
            <summary>
            将秒转成时间
            </summary>
            <param name="second">秒</param>
            <returns>时间</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToSeconds(System.DateTime)">
            <summary>
            将时间转成秒
            </summary>
            <param name="dateTime">秒</param>
            <returns>秒</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToMsSeconds(System.DateTime)">
            <summary>
            将日期时间转化为毫秒
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToDateTime(System.Int64)">
            <summary>
            将毫秒转化为日期时间格式
            </summary>
            <param name="msSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToBasePoint(Golden.DotNetSDK.Model.Base.BasePoint)">
            <summary>
            转换为完整基本标签点信息
            </summary>
            <param name="fullPoint">完整的基本标签点</param>
            <returns>Golden_Point</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToBasePoint(RTDB.Data.Client.Struct.Golden_Point)">
            <summary>
            转换为完整基本标签点信息
            </summary>
            <param name="point">完整的基本标签点</param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToScanPoint(RTDB.Data.Client.Struct.Golden_ScanPoint)">
            <summary>
            转换为采集点信息
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToScanPoint(Golden.DotNetSDK.Model.Base.ScanPoint)">
            <summary>
            转换为采集点信息
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToClacPoint(RTDB.Data.Client.Struct.Golden_ClacPoint)">
            <summary>
            转换为计算点信息
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToClacPoint(Golden.DotNetSDK.Model.Base.ClacPoint)">
            <summary>
            转换为计算点信息
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToClacPoint(RTDB.Data.Client.Struct.Golden_MaxCalcPoint)">
            <summary>
            转换为最长计算方程式的计算点信息
            </summary>
            <param name="point">计算点</param>
            <returns>计算点实体</returns>
        </member>
        <member name="M:Golden.DotNetSDK.Util.RTDBConvert.ConvertToMaxClacPoint(Golden.DotNetSDK.Model.Base.ClacPoint)">
            <summary>
            转换为最长计算方程式的计算点信息
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
    </members>
</doc>
